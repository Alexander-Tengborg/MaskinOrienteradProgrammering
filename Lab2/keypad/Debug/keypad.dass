
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
const unsigned char segs[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x67,0x77,0x7C,0x39,0x5E,0x79,0x71};

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");      /* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");                 /* call main */
20000004:	f000 f8ca 	bl	2000019c <main>
__asm__ volatile(".L1: B .L1\n");                   /* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:
/*
 * Konfigurerar port D så att den kan användas med en keypad på bitar 0-7, 
 * samt så att en 7-segment display kan användas på bitar 8-15
 */
void app_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    // Keypad setup
    *GPIO_D_MODER &= 0x0000FFFF;
20000014:	4b10      	ldr	r3, [pc, #64]	; (20000058 <app_init+0x48>)
20000016:	681a      	ldr	r2, [r3, #0]
20000018:	4b0f      	ldr	r3, [pc, #60]	; (20000058 <app_init+0x48>)
2000001a:	0412      	lsls	r2, r2, #16
2000001c:	0c12      	lsrs	r2, r2, #16
2000001e:	601a      	str	r2, [r3, #0]
    *GPIO_D_MODER |= 0x55000000;
20000020:	4b0d      	ldr	r3, [pc, #52]	; (20000058 <app_init+0x48>)
20000022:	681a      	ldr	r2, [r3, #0]
20000024:	4b0c      	ldr	r3, [pc, #48]	; (20000058 <app_init+0x48>)
20000026:	21aa      	movs	r1, #170	; 0xaa
20000028:	05c9      	lsls	r1, r1, #23
2000002a:	430a      	orrs	r2, r1
2000002c:	601a      	str	r2, [r3, #0]
    *GPIO_D_OTYPER_HIGH = 0x00;
2000002e:	4b0b      	ldr	r3, [pc, #44]	; (2000005c <app_init+0x4c>)
20000030:	2200      	movs	r2, #0
20000032:	701a      	strb	r2, [r3, #0]
    *GPIO_D_PUPDR_HIGH = 0x00AA;
20000034:	4b0a      	ldr	r3, [pc, #40]	; (20000060 <app_init+0x50>)
20000036:	22aa      	movs	r2, #170	; 0xaa
20000038:	801a      	strh	r2, [r3, #0]
 
    // 7-seg setup
    *GPIO_D_MODER &= 0xFFFF0000;
2000003a:	4b07      	ldr	r3, [pc, #28]	; (20000058 <app_init+0x48>)
2000003c:	681a      	ldr	r2, [r3, #0]
2000003e:	4b06      	ldr	r3, [pc, #24]	; (20000058 <app_init+0x48>)
20000040:	0c12      	lsrs	r2, r2, #16
20000042:	0412      	lsls	r2, r2, #16
20000044:	601a      	str	r2, [r3, #0]
    *GPIO_D_MODER |= 0x00005555;
20000046:	4b04      	ldr	r3, [pc, #16]	; (20000058 <app_init+0x48>)
20000048:	681a      	ldr	r2, [r3, #0]
2000004a:	4b03      	ldr	r3, [pc, #12]	; (20000058 <app_init+0x48>)
2000004c:	4905      	ldr	r1, [pc, #20]	; (20000064 <app_init+0x54>)
2000004e:	430a      	orrs	r2, r1
20000050:	601a      	str	r2, [r3, #0]
}
20000052:	46c0      	nop			; (mov r8, r8)
20000054:	46bd      	mov	sp, r7
20000056:	bd80      	pop	{r7, pc}
20000058:	40020c00 	andmi	r0, r2, r0, lsl #24
2000005c:	40020c05 	andmi	r0, r2, r5, lsl #24
20000060:	40020c1c 	andmi	r0, r2, ip, lsl ip
20000064:	00005555 	andeq	r5, r0, r5, asr r5

20000068 <activateRow>:
 
/* 
 * Aktiverar rad row 
 */
void activateRow(int row)
{
20000068:	b580      	push	{r7, lr}
2000006a:	b082      	sub	sp, #8
2000006c:	af00      	add	r7, sp, #0
2000006e:	6078      	str	r0, [r7, #4]
    *GPIO_D_ODR_HIGH = 0x10 << (row-1);
20000070:	687b      	ldr	r3, [r7, #4]
20000072:	3b01      	subs	r3, #1
20000074:	2210      	movs	r2, #16
20000076:	409a      	lsls	r2, r3
20000078:	4b03      	ldr	r3, [pc, #12]	; (20000088 <activateRow+0x20>)
2000007a:	b2d2      	uxtb	r2, r2
2000007c:	701a      	strb	r2, [r3, #0]
}
2000007e:	46c0      	nop			; (mov r8, r8)
20000080:	46bd      	mov	sp, r7
20000082:	b002      	add	sp, #8
20000084:	bd80      	pop	{r7, pc}
20000086:	46c0      	nop			; (mov r8, r8)
20000088:	40020c15 	andmi	r0, r2, r5, lsl ip

2000008c <getColumn>:

/* 
 * Läser alla kolumner och returnerar ett värde beroende på vilken som är på
 */
unsigned char getColumn(void)
{
2000008c:	b580      	push	{r7, lr}
2000008e:	b082      	sub	sp, #8
20000090:	af00      	add	r7, sp, #0
    unsigned char c;
    c = *GPIO_D_IDR_HIGH;
20000092:	4a12      	ldr	r2, [pc, #72]	; (200000dc <getColumn+0x50>)
20000094:	1dfb      	adds	r3, r7, #7
20000096:	7812      	ldrb	r2, [r2, #0]
20000098:	701a      	strb	r2, [r3, #0]
    if (c & 0x8) return 4;
2000009a:	1dfb      	adds	r3, r7, #7
2000009c:	781b      	ldrb	r3, [r3, #0]
2000009e:	2208      	movs	r2, #8
200000a0:	4013      	ands	r3, r2
200000a2:	d001      	beq.n	200000a8 <getColumn+0x1c>
200000a4:	2304      	movs	r3, #4
200000a6:	e015      	b.n	200000d4 <getColumn+0x48>
    if (c & 0x4) return 3;
200000a8:	1dfb      	adds	r3, r7, #7
200000aa:	781b      	ldrb	r3, [r3, #0]
200000ac:	2204      	movs	r2, #4
200000ae:	4013      	ands	r3, r2
200000b0:	d001      	beq.n	200000b6 <getColumn+0x2a>
200000b2:	2303      	movs	r3, #3
200000b4:	e00e      	b.n	200000d4 <getColumn+0x48>
    if (c & 0x2) return 2;
200000b6:	1dfb      	adds	r3, r7, #7
200000b8:	781b      	ldrb	r3, [r3, #0]
200000ba:	2202      	movs	r2, #2
200000bc:	4013      	ands	r3, r2
200000be:	d001      	beq.n	200000c4 <getColumn+0x38>
200000c0:	2302      	movs	r3, #2
200000c2:	e007      	b.n	200000d4 <getColumn+0x48>
    if (c & 0x1) return 1;
200000c4:	1dfb      	adds	r3, r7, #7
200000c6:	781b      	ldrb	r3, [r3, #0]
200000c8:	2201      	movs	r2, #1
200000ca:	4013      	ands	r3, r2
200000cc:	d001      	beq.n	200000d2 <getColumn+0x46>
200000ce:	2301      	movs	r3, #1
200000d0:	e000      	b.n	200000d4 <getColumn+0x48>
    return 0;
200000d2:	2300      	movs	r3, #0
}
200000d4:	0018      	movs	r0, r3
200000d6:	46bd      	mov	sp, r7
200000d8:	b002      	add	sp, #8
200000da:	bd80      	pop	{r7, pc}
200000dc:	40020c11 	andmi	r0, r2, r1, lsl ip

200000e0 <keyb>:
 
/* 
 * Används för att returna den knappen som är nertryckt
 */
unsigned char keyb(void) {
200000e0:	b5f0      	push	{r4, r5, r6, r7, lr}
200000e2:	b087      	sub	sp, #28
200000e4:	af00      	add	r7, sp, #0
    unsigned char key[] = {1,2,3,0xA,4,5,6,0xB,7,8,9,0xC,0xE,0,0xF,0xD};                           
200000e6:	1d3b      	adds	r3, r7, #4
200000e8:	4a1d      	ldr	r2, [pc, #116]	; (20000160 <keyb+0x80>)
200000ea:	ca13      	ldmia	r2!, {r0, r1, r4}
200000ec:	c313      	stmia	r3!, {r0, r1, r4}
200000ee:	6812      	ldr	r2, [r2, #0]
200000f0:	601a      	str	r2, [r3, #0]
    for (unsigned char row = 1; row <= 4; row++) {
200000f2:	2317      	movs	r3, #23
200000f4:	18fb      	adds	r3, r7, r3
200000f6:	2201      	movs	r2, #1
200000f8:	701a      	strb	r2, [r3, #0]
200000fa:	e024      	b.n	20000146 <keyb+0x66>
        activateRow(row);
200000fc:	2617      	movs	r6, #23
200000fe:	19bb      	adds	r3, r7, r6
20000100:	781b      	ldrb	r3, [r3, #0]
20000102:	0018      	movs	r0, r3
20000104:	f7ff ffb0 	bl	20000068 <activateRow>
        unsigned char col = getColumn();
20000108:	2516      	movs	r5, #22
2000010a:	197c      	adds	r4, r7, r5
2000010c:	f7ff ffbe 	bl	2000008c <getColumn>
20000110:	0003      	movs	r3, r0
20000112:	7023      	strb	r3, [r4, #0]
        if (col != 0) {
20000114:	002c      	movs	r4, r5
20000116:	193b      	adds	r3, r7, r4
20000118:	781b      	ldrb	r3, [r3, #0]
2000011a:	2b00      	cmp	r3, #0
2000011c:	d00d      	beq.n	2000013a <keyb+0x5a>
            activateRow(0);
2000011e:	2000      	movs	r0, #0
20000120:	f7ff ffa2 	bl	20000068 <activateRow>
            return key[4*(row-1)+(col-1)];
20000124:	19bb      	adds	r3, r7, r6
20000126:	781b      	ldrb	r3, [r3, #0]
20000128:	3b01      	subs	r3, #1
2000012a:	009a      	lsls	r2, r3, #2
2000012c:	193b      	adds	r3, r7, r4
2000012e:	781b      	ldrb	r3, [r3, #0]
20000130:	3b01      	subs	r3, #1
20000132:	18d3      	adds	r3, r2, r3
20000134:	1d3a      	adds	r2, r7, #4
20000136:	5cd3      	ldrb	r3, [r2, r3]
20000138:	e00e      	b.n	20000158 <keyb+0x78>
    for (unsigned char row = 1; row <= 4; row++) {
2000013a:	2117      	movs	r1, #23
2000013c:	187b      	adds	r3, r7, r1
2000013e:	781a      	ldrb	r2, [r3, #0]
20000140:	187b      	adds	r3, r7, r1
20000142:	3201      	adds	r2, #1
20000144:	701a      	strb	r2, [r3, #0]
20000146:	2317      	movs	r3, #23
20000148:	18fb      	adds	r3, r7, r3
2000014a:	781b      	ldrb	r3, [r3, #0]
2000014c:	2b04      	cmp	r3, #4
2000014e:	d9d5      	bls.n	200000fc <keyb+0x1c>
        }
    }
    activateRow(0);
20000150:	2000      	movs	r0, #0
20000152:	f7ff ff89 	bl	20000068 <activateRow>
    return 0xFF;
20000156:	23ff      	movs	r3, #255	; 0xff
}
20000158:	0018      	movs	r0, r3
2000015a:	46bd      	mov	sp, r7
2000015c:	b007      	add	sp, #28
2000015e:	bdf0      	pop	{r4, r5, r6, r7, pc}
20000160:	200001cc 	andcs	r0, r0, ip, asr #3

20000164 <out7seg>:

/* 
 * Ändrar värde på 7-segment displayen så att den visar den nertryckta knappen
 */
void out7seg(unsigned char c)
{
20000164:	b580      	push	{r7, lr}
20000166:	b082      	sub	sp, #8
20000168:	af00      	add	r7, sp, #0
2000016a:	0002      	movs	r2, r0
2000016c:	1dfb      	adds	r3, r7, #7
2000016e:	701a      	strb	r2, [r3, #0]
    if(c > 16) {
20000170:	1dfb      	adds	r3, r7, #7
20000172:	781b      	ldrb	r3, [r3, #0]
20000174:	2b10      	cmp	r3, #16
20000176:	d903      	bls.n	20000180 <out7seg+0x1c>
        *GPIO_D_ODR_LOW = 0;
20000178:	4b06      	ldr	r3, [pc, #24]	; (20000194 <out7seg+0x30>)
2000017a:	2200      	movs	r2, #0
2000017c:	701a      	strb	r2, [r3, #0]
        return;
2000017e:	e005      	b.n	2000018c <out7seg+0x28>
    }
    *GPIO_D_ODR_LOW = segs[c];
20000180:	1dfb      	adds	r3, r7, #7
20000182:	781b      	ldrb	r3, [r3, #0]
20000184:	4903      	ldr	r1, [pc, #12]	; (20000194 <out7seg+0x30>)
20000186:	4a04      	ldr	r2, [pc, #16]	; (20000198 <out7seg+0x34>)
20000188:	5cd3      	ldrb	r3, [r2, r3]
2000018a:	700b      	strb	r3, [r1, #0]
}
2000018c:	46bd      	mov	sp, r7
2000018e:	b002      	add	sp, #8
20000190:	bd80      	pop	{r7, pc}
20000192:	46c0      	nop			; (mov r8, r8)
20000194:	40020c14 	andmi	r0, r2, r4, lsl ip
20000198:	200001bc 			; <UNDEFINED> instruction: 0x200001bc

2000019c <main>:

/*
 * Programmets main funktion 
 */
void main(void)
{
2000019c:	b590      	push	{r4, r7, lr}
2000019e:	b083      	sub	sp, #12
200001a0:	af00      	add	r7, sp, #0
    unsigned char c;
    app_init();
200001a2:	f7ff ff35 	bl	20000010 <app_init>
    while(1) {
        c = keyb();
200001a6:	1dfc      	adds	r4, r7, #7
200001a8:	f7ff ff9a 	bl	200000e0 <keyb>
200001ac:	0003      	movs	r3, r0
200001ae:	7023      	strb	r3, [r4, #0]
        out7seg(c);
200001b0:	1dfb      	adds	r3, r7, #7
200001b2:	781b      	ldrb	r3, [r3, #0]
200001b4:	0018      	movs	r0, r3
200001b6:	f7ff ffd5 	bl	20000164 <out7seg>
        c = keyb();
200001ba:	e7f4      	b.n	200001a6 <main+0xa>

200001bc <segs>:
200001bc:	4f5b063f 	svcmi	0x005b063f
200001c0:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
200001c4:	7c77677f 	ldclvc	7, cr6, [r7], #-508	; 0xfffffe04
200001c8:	71795e39 	cmnvc	r9, r9, lsr lr
200001cc:	0a030201 	beq	200c09d8 <segs+0xc081c>
200001d0:	0b060504 	bleq	201815e8 <segs+0x18142c>
200001d4:	0c090807 	stceq	8, cr0, [r9], {7}
200001d8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001a8 <main+0xc>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000189 	andeq	r0, r0, r9, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000980c 	andeq	r9, r0, ip, lsl #16
  14:	0000f400 	andeq	pc, r0, r0, lsl #8
	...
  24:	00480200 	subeq	r0, r8, r0, lsl #4
  28:	00350000 	eorseq	r0, r5, r0
  2c:	3a030000 	bcc	c0034 <startup-0x1ff3ffcc>
  30:	0f000000 	svceq	0x00000000
  34:	00250400 	eoreq	r0, r5, r0, lsl #8
  38:	04050000 	streq	r0, [r5], #-0
  3c:	00007c07 	andeq	r7, r0, r7, lsl #24
  40:	08010500 	stmdaeq	r1, {r8, sl}
  44:	000000e6 	andeq	r0, r0, r6, ror #1
  48:	00004104 	andeq	r4, r0, r4, lsl #2
  4c:	012d0600 			; <UNDEFINED> instruction: 0x012d0600
  50:	1a010000 	bne	40058 <startup-0x1ffbffa8>
  54:	00003515 	andeq	r3, r0, r5, lsl r5
  58:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
  5c:	07200001 	streq	r0, [r0, -r1]!
  60:	00000128 	andeq	r0, r0, r8, lsr #2
  64:	9c066c01 	stcls	12, cr6, [r6], {1}
  68:	20200001 	eorcs	r0, r0, r1
  6c:	01000000 	mrseq	r0, (UNDEF: 0)
  70:	0000839c 	muleq	r0, ip, r3
  74:	00630800 	rsbeq	r0, r3, r0, lsl #16
  78:	41136e01 	tstmi	r3, r1, lsl #28
  7c:	02000000 	andeq	r0, r0, #0
  80:	09006f91 	stmdbeq	r0, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
  84:	000000d6 	ldrdeq	r0, [r0], -r6
  88:	64066001 	strvs	r6, [r6], #-1
  8c:	38200001 	stmdacc	r0!, {r0}
  90:	01000000 	mrseq	r0, (UNDEF: 0)
  94:	0000a79c 	muleq	r0, ip, r7
  98:	00630a00 	rsbeq	r0, r3, r0, lsl #20
  9c:	411c6001 	tstmi	ip, r1
  a0:	02000000 	andeq	r0, r0, #0
  a4:	0b007791 	bleq	1def0 <startup-0x1ffe2110>
  a8:	00000089 	andeq	r0, r0, r9, lsl #1
  ac:	410f4f01 	tstmi	pc, r1, lsl #30
  b0:	e0000000 	and	r0, r0, r0
  b4:	84200000 	strthi	r0, [r0], #-0
  b8:	01000000 	mrseq	r0, (UNDEF: 0)
  bc:	0001039c 	muleq	r1, ip, r3
  c0:	656b0800 	strbvs	r0, [fp, #-2048]!	; 0xfffff800
  c4:	50010079 	andpl	r0, r1, r9, ror r0
  c8:	00010313 	andeq	r0, r1, r3, lsl r3
  cc:	54910200 	ldrpl	r0, [r1], #512	; 0x200
  d0:	0000f20c 	andeq	pc, r0, ip, lsl #4
  d4:	00005e20 	andeq	r5, r0, r0, lsr #28
  d8:	6f720800 	svcvs	0x00720800
  dc:	51010077 	tstpl	r1, r7, ror r0
  e0:	00004118 	andeq	r4, r0, r8, lsl r1
  e4:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
  e8:	0000fc0c 	andeq	pc, r0, ip, lsl #24
  ec:	00003e20 	andeq	r3, r0, r0, lsr #28
  f0:	6f630800 	svcvs	0x00630800
  f4:	5301006c 	movwpl	r0, #4204	; 0x106c
  f8:	00004117 	andeq	r4, r0, r7, lsl r1
  fc:	66910200 	ldrvs	r0, [r1], r0, lsl #4
 100:	02000000 	andeq	r0, r0, #0
 104:	00000041 	andeq	r0, r0, r1, asr #32
 108:	00000113 	andeq	r0, r0, r3, lsl r1
 10c:	00003a03 	andeq	r3, r0, r3, lsl #20
 110:	0d000f00 	stceq	15, cr0, [r0, #-0]
 114:	0000008e 	andeq	r0, r0, lr, lsl #1
 118:	410f4101 	tstmi	pc, r1, lsl #2
 11c:	8c000000 	stchi	0, cr0, [r0], {-0}
 120:	54200000 	strtpl	r0, [r0], #-0
 124:	01000000 	mrseq	r0, (UNDEF: 0)
 128:	00013b9c 	muleq	r1, ip, fp
 12c:	00630800 	rsbeq	r0, r3, r0, lsl #16
 130:	41134301 	tstmi	r3, r1, lsl #6
 134:	02000000 	andeq	r0, r0, #0
 138:	09007791 	stmdbeq	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
 13c:	00000132 	andeq	r0, r0, r2, lsr r1
 140:	68063901 	stmdavs	r6, {r0, r8, fp, ip, sp}
 144:	24200000 	strtcs	r0, [r0], #-0
 148:	01000000 	mrseq	r0, (UNDEF: 0)
 14c:	0001619c 	muleq	r1, ip, r1
 150:	6f720a00 	svcvs	0x00720a00
 154:	39010077 	stmdbcc	r1, {r0, r1, r2, r4, r5, r6}
 158:	00016116 	andeq	r6, r1, r6, lsl r1
 15c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 160:	05040e00 	streq	r0, [r4, #-3584]	; 0xfffff200
 164:	00746e69 	rsbseq	r6, r4, r9, ror #28
 168:	00013e0f 	andeq	r3, r1, pc, lsl #28
 16c:	06290100 	strteq	r0, [r9], -r0, lsl #2
 170:	20000010 	andcs	r0, r0, r0, lsl r0
 174:	00000058 	andeq	r0, r0, r8, asr r0
 178:	de0f9c01 	cdple	12, 0, cr9, cr15, cr1, {0}
 17c:	01000000 	mrseq	r0, (UNDEF: 0)
 180:	0000061d 	andeq	r0, r0, sp, lsl r6
 184:	000c2000 	andeq	r2, ip, r0
 188:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	13490101 	movtne	r0, #37121	; 0x9101
  18:	00001301 	andeq	r1, r0, r1, lsl #6
  1c:	49002103 	stmdbmi	r0, {r0, r1, r8, sp}
  20:	000b2f13 	andeq	r2, fp, r3, lsl pc
  24:	00260400 	eoreq	r0, r6, r0, lsl #8
  28:	00001349 	andeq	r1, r0, r9, asr #6
  2c:	0b002405 	bleq	9048 <startup-0x1fff6fb8>
  30:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  34:	0600000e 	streq	r0, [r0], -lr
  38:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  3c:	0b3b0b3a 	bleq	ec2d2c <startup-0x1f13d2d4>
  40:	13490b39 	movtne	r0, #39737	; 0x9b39
  44:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  48:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
  4c:	03193f01 	tsteq	r9, #1, 30
  50:	3b0b3a0e 	blcc	2ce890 <startup-0x1fd31770>
  54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  58:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  5c:	96184006 	ldrls	r4, [r8], -r6
  60:	13011942 	movwne	r1, #6466	; 0x1942
  64:	34080000 	strcc	r0, [r8], #-0
  68:	3a080300 	bcc	200c70 <startup-0x1fdff390>
  6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  74:	09000018 	stmdbeq	r0, {r3, r4}
  78:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  7c:	0b3a0e03 	bleq	e83890 <startup-0x1f17c770>
  80:	0b390b3b 	bleq	e42d74 <startup-0x1f1bd28c>
  84:	01111927 	tsteq	r1, r7, lsr #18
  88:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  8c:	01194297 			; <UNDEFINED> instruction: 0x01194297
  90:	0a000013 	beq	e4 <startup-0x1fffff1c>
  94:	08030005 	stmdaeq	r3, {r0, r2}
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	13490b39 	movtne	r0, #39737	; 0x9b39
  a0:	00001802 	andeq	r1, r0, r2, lsl #16
  a4:	3f012e0b 	svccc	0x00012e0b
  a8:	3a0e0319 	bcc	380d14 <startup-0x1fc7f2ec>
  ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  b0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  b4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  b8:	96184006 	ldrls	r4, [r8], -r6
  bc:	13011942 	movwne	r1, #6466	; 0x1942
  c0:	0b0c0000 	bleq	3000c8 <startup-0x1fcfff38>
  c4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
  c8:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
  cc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  d0:	0b3a0e03 	bleq	e838e4 <startup-0x1f17c71c>
  d4:	0b390b3b 	bleq	e42dc8 <startup-0x1f1bd238>
  d8:	13491927 	movtne	r1, #39207	; 0x9927
  dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
  e0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  e4:	00130119 	andseq	r0, r3, r9, lsl r1
  e8:	00240e00 	eoreq	r0, r4, r0, lsl #28
  ec:	0b3e0b0b 	bleq	f82d20 <startup-0x1f07d2e0>
  f0:	00000803 	andeq	r0, r0, r3, lsl #16
  f4:	3f002e0f 	svccc	0x00002e0f
  f8:	3a0e0319 	bcc	380d64 <startup-0x1fc7f29c>
  fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 100:	1119270b 	tstne	r9, fp, lsl #14
 104:	40061201 	andmi	r1, r6, r1, lsl #4
 108:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 10c:	Address 0x0000010c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001ac 	andeq	r0, r0, ip, lsr #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000015e 	andeq	r0, r0, lr, asr r1
   4:	00540003 	subseq	r0, r4, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	554b2f3a 	strbpl	r2, [fp, #-3898]	; 0xfffff0c6
  20:	52455352 	subpl	r5, r5, #1207959553	; 0x48000001
  24:	73614d2f 	cmnvc	r1, #3008	; 0xbc0
  28:	4f6e696b 	svcmi	0x006e696b
  2c:	6e656972 			; <UNDEFINED> instruction: 0x6e656972
  30:	61726574 	cmnvs	r2, r4, ror r5
  34:	6f725064 	svcvs	0x00725064
  38:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  3c:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
  40:	4c2f676e 	stcmi	7, cr6, [pc], #-440	; fffffe90 <segs+0xdffffcd4>
  44:	2f326261 	svccs	0x00326261
  48:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  4c:	00006461 	andeq	r6, r0, r1, ror #8
  50:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  54:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  58:	00010063 	andeq	r0, r1, r3, rrx
  5c:	01050000 	mrseq	r0, (UNDEF: 5)
  60:	00020500 	andeq	r0, r2, r0, lsl #10
  64:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  68:	2113011d 	tstcs	r3, sp, lsl r1
  6c:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
  70:	01010003 	tsteq	r1, r3
  74:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  78:	00001002 	andeq	r1, r0, r2
  7c:	01290320 			; <UNDEFINED> instruction: 0x01290320
  80:	67301305 	ldrvs	r1, [r0, -r5, lsl #6]!
  84:	05750505 	ldrbeq	r0, [r5, #-1285]!	; 0xfffffafb
  88:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
  8c:	2018052f 	andscs	r0, r8, pc, lsr #10
  90:	67311305 	ldrvs	r1, [r1, -r5, lsl #6]!
  94:	b2670105 	rsblt	r0, r7, #1073741825	; 0x40000001
  98:	054b2405 	strbeq	r2, [fp, #-1029]	; 0xfffffbfb
  9c:	05052e1d 	streq	r2, [r5, #-3613]	; 0xfffff1e3
  a0:	2016052e 	andscs	r0, r6, lr, lsr #10
  a4:	7a2f0105 	bvc	bc04c0 <startup-0x1f43fb40>
  a8:	053e0905 	ldreq	r0, [lr, #-2309]!	; 0xfffff6fb
  ac:	0b052007 	bleq	1480d0 <startup-0x1feb7f30>
  b0:	4a08053d 	bmi	2015ac <startup-0x1fdfea54>
  b4:	02001905 	andeq	r1, r0, #81920	; 0x14000
  b8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
  bc:	08052f0b 	stmdaeq	r5, {r0, r1, r3, r8, r9, sl, fp, sp}
  c0:	0019054a 	andseq	r0, r9, sl, asr #10
  c4:	20010402 	andcs	r0, r1, r2, lsl #8
  c8:	052f0b05 	streq	r0, [pc, #-2821]!	; fffff5cb <segs+0xdffff40f>
  cc:	19054a08 	stmdbne	r5, {r3, r9, fp, lr}
  d0:	01040200 	mrseq	r0, R12_usr
  d4:	2f0b0520 	svccs	0x000b0520
  d8:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
  dc:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
  e0:	0c052001 	stceq	0, cr2, [r5], {1}
  e4:	2101052f 	tstcs	r1, pc, lsr #10
  e8:	056b1a05 	strbeq	r1, [fp, #-2565]!	; 0xfffff5fb
  ec:	18053d13 	stmdane	r5, {r0, r1, r4, r8, sl, fp, ip, sp}
  f0:	4a050567 	bmi	141694 <startup-0x1febe96c>
  f4:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
  f8:	0c05671d 	stceq	7, cr6, [r5], {29}
  fc:	590d0567 	stmdbpl	sp, {r0, r1, r2, r5, r6, r8, sl}
 100:	053d1e05 	ldreq	r1, [sp, #-3589]!	; 0xfffff1fb
 104:	26053c19 			; <UNDEFINED> instruction: 0x26053c19
 108:	3c210520 	cfstr32cc	mvfx0, [r1], #-128	; 0xffffff80
 10c:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
 110:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 114:	05053702 	streq	r3, [r5, #-1794]	; 0xfffff8fe
 118:	01040200 	mrseq	r0, R12_usr
 11c:	0c056066 	stceq	0, cr6, [r5], {102}	; 0x66
 120:	0001053d 	andeq	r0, r1, sp, lsr r5
 124:	21010402 	tstcs	r1, r2, lsl #8
 128:	6707056c 	strvs	r0, [r7, -ip, ror #10]
 12c:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
 130:	09052019 	stmdbeq	r5, {r0, r3, r4, sp}
 134:	221b052f 	andscs	r0, fp, #197132288	; 0xbc00000
 138:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 13c:	1505201b 	strne	r2, [r5, #-27]	; 0xffffffe5
 140:	2101052e 	tstcs	r1, lr, lsr #10
 144:	3e050588 	cfsh32cc	mvfx0, mvfx5, #-56
 148:	02000d05 	andeq	r0, r0, #320	; 0x140
 14c:	05300104 	ldreq	r0, [r0, #-260]!	; 0xfffffefc
 150:	04020009 	streq	r0, [r2], #-9
 154:	0b055901 	bleq	156560 <startup-0x1fea9aa0>
 158:	01040200 	mrseq	r0, R12_usr
 15c:	00010257 	andeq	r0, r1, r7, asr r2
 160:	Address 0x00000160 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  8c:	65670062 	strbvs	r0, [r7, #-98]!	; 0xffffff9e
  90:	6c6f4374 	stclvs	3, cr4, [pc], #-464	; fffffec8 <segs+0xdffffd0c>
  94:	006e6d75 	rsbeq	r6, lr, r5, ror sp
  98:	4b2f3a44 	blmi	bce9b0 <startup-0x1f431650>
  9c:	45535255 	ldrbmi	r5, [r3, #-597]	; 0xfffffdab
  a0:	614d2f52 	cmpvs	sp, r2, asr pc
  a4:	6e696b73 	vmovvs.8	d9[7], r6
  a8:	6569724f 	strbvs	r7, [r9, #-591]!	; 0xfffffdb1
  ac:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
  b0:	72506461 	subsvc	r6, r0, #1627389952	; 0x61000000
  b4:	6172676f 	cmnvs	r2, pc, ror #14
  b8:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
  bc:	2f676e69 	svccs	0x00676e69
  c0:	3262614c 	rsbcc	r6, r2, #76, 2
  c4:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  c8:	2f646170 	svccs	0x00646170
  cc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  d0:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  d4:	756f0063 	strbvc	r0, [pc, #-99]!	; 79 <startup-0x1fffff87>
  d8:	65733774 	ldrbvs	r3, [r3, #-1908]!	; 0xfffff88c
  dc:	74730067 	ldrbtvc	r0, [r3], #-103	; 0xffffff99
  e0:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  e4:	6e750070 	mrcvs	0, 3, r0, cr5, cr0, {3}
  e8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  ec:	63206465 			; <UNDEFINED> instruction: 0x63206465
  f0:	00726168 	rsbseq	r6, r2, r8, ror #2
  f4:	4b5c3a44 	blmi	170ea0c <startup-0x1e8f15f4>
  f8:	45535255 	ldrbmi	r5, [r3, #-597]	; 0xfffffdab
  fc:	614d5c52 	cmpvs	sp, r2, asr ip
 100:	6e696b73 	vmovvs.8	d9[7], r6
 104:	6569724f 	strbvs	r7, [r9, #-591]!	; 0xfffffdb1
 108:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 10c:	72506461 	subsvc	r6, r0, #1627389952	; 0x61000000
 110:	6172676f 	cmnvs	r2, pc, ror #14
 114:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
 118:	5c676e69 	stclpl	14, cr6, [r7], #-420	; 0xfffffe5c
 11c:	3262614c 	rsbcc	r6, r2, #76, 2
 120:	79656b5c 	stmdbvc	r5!, {r2, r3, r4, r6, r8, r9, fp, sp, lr}^
 124:	00646170 	rsbeq	r6, r4, r0, ror r1
 128:	6e69616d 	powvsez	f6, f1, #5.0
 12c:	67657300 	strbvs	r7, [r5, -r0, lsl #6]!
 130:	63610073 	cmnvs	r1, #115	; 0x73
 134:	61766974 	cmnvs	r6, r4, ror r9
 138:	6f526574 	svcvs	0x00526574
 13c:	70610077 	rsbvc	r0, r1, r7, ror r0
 140:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
 144:	Address 0x00000144 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000058 	andeq	r0, r0, r8, asr r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000068 	andcs	r0, r0, r8, rrx
  48:	00000024 	andeq	r0, r0, r4, lsr #32
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	2000008c 	andcs	r0, r0, ip, lsl #1
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
  80:	00000000 	andeq	r0, r0, r0
  84:	200000e0 	andcs	r0, r0, r0, ror #1
  88:	00000084 	andeq	r0, r0, r4, lsl #1
  8c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
  90:	86048505 	strhi	r8, [r4], -r5, lsl #10
  94:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  98:	300e4101 	andcc	r4, lr, r1, lsl #2
  9c:	00070d41 	andeq	r0, r7, r1, asr #26
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	00000000 	andeq	r0, r0, r0
  a8:	20000164 	andcs	r0, r0, r4, ror #2
  ac:	00000038 	andeq	r0, r0, r8, lsr r0
  b0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b4:	41018e02 	tstmi	r1, r2, lsl #28
  b8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  bc:	00000007 	andeq	r0, r0, r7
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	00000000 	andeq	r0, r0, r0
  c8:	2000019c 	mulcs	r0, ip, r1
  cc:	00000020 	andeq	r0, r0, r0, lsr #32
  d0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  d4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  d8:	180e4101 	stmdane	lr, {r0, r8, lr}
  dc:	00070d41 	andeq	r0, r7, r1, asr #26
