
./Debug/asciidisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#define 	STK_VAL 		((volatile unsigned int *)(0xE000E018))
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f9c3 	bl	2000038e <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:

void init_app()
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*GPIO_E_MODER = 0x55555555;
20000014:	4b02      	ldr	r3, [pc, #8]	; (20000020 <init_app+0x10>)
20000016:	4a03      	ldr	r2, [pc, #12]	; (20000024 <init_app+0x14>)
20000018:	601a      	str	r2, [r3, #0]
}
2000001a:	46c0      	nop			; (mov r8, r8)
2000001c:	46bd      	mov	sp, r7
2000001e:	bd80      	pop	{r7, pc}
20000020:	40021000 	andmi	r1, r2, r0
20000024:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000028 <ascii_init>:

void ascii_init()
{
20000028:	b580      	push	{r7, lr}
2000002a:	af00      	add	r7, sp, #0
    ascii_ctrl_bit_clear(B_RS);
2000002c:	2001      	movs	r0, #1
2000002e:	f000 f885 	bl	2000013c <ascii_ctrl_bit_clear>
    ascii_ctrl_bit_clear(B_RW);
20000032:	2002      	movs	r0, #2
20000034:	f000 f882 	bl	2000013c <ascii_ctrl_bit_clear>
    ascii_command(0x3C); // Function Set: 2 rader och 5x8 punkters tecken
20000038:	203c      	movs	r0, #60	; 0x3c
2000003a:	f000 f93f 	bl	200002bc <ascii_command>
    ascii_command(0xF); // Display Control: Tänd display, tänd markör (cursor) och konstant visning
2000003e:	200f      	movs	r0, #15
20000040:	f000 f93c 	bl	200002bc <ascii_command>
    ascii_command(1); // Clear Display
20000044:	2001      	movs	r0, #1
20000046:	f000 f939 	bl	200002bc <ascii_command>
    ascii_command(6); // Entry Mode Set: Adressing med "increment"; inget skift av adressbufferten
2000004a:	2006      	movs	r0, #6
2000004c:	f000 f936 	bl	200002bc <ascii_command>
}
20000050:	46c0      	nop			; (mov r8, r8)
20000052:	46bd      	mov	sp, r7
20000054:	bd80      	pop	{r7, pc}

20000056 <delay_250ns>:

void delay_250ns(void)
{
20000056:	b580      	push	{r7, lr}
20000058:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
2000005a:	4b0c      	ldr	r3, [pc, #48]	; (2000008c <delay_250ns+0x36>)
2000005c:	2200      	movs	r2, #0
2000005e:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1 );
20000060:	4b0b      	ldr	r3, [pc, #44]	; (20000090 <delay_250ns+0x3a>)
20000062:	2229      	movs	r2, #41	; 0x29
20000064:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20000066:	4b0b      	ldr	r3, [pc, #44]	; (20000094 <delay_250ns+0x3e>)
20000068:	2200      	movs	r2, #0
2000006a:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000006c:	4b07      	ldr	r3, [pc, #28]	; (2000008c <delay_250ns+0x36>)
2000006e:	2205      	movs	r2, #5
20000070:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000 )== 0 );
20000072:	46c0      	nop			; (mov r8, r8)
20000074:	4b05      	ldr	r3, [pc, #20]	; (2000008c <delay_250ns+0x36>)
20000076:	681a      	ldr	r2, [r3, #0]
20000078:	2380      	movs	r3, #128	; 0x80
2000007a:	025b      	lsls	r3, r3, #9
2000007c:	4013      	ands	r3, r2
2000007e:	d0f9      	beq.n	20000074 <delay_250ns+0x1e>
	*STK_CTRL = 0;
20000080:	4b02      	ldr	r3, [pc, #8]	; (2000008c <delay_250ns+0x36>)
20000082:	2200      	movs	r2, #0
20000084:	601a      	str	r2, [r3, #0]
}
20000086:	46c0      	nop			; (mov r8, r8)
20000088:	46bd      	mov	sp, r7
2000008a:	bd80      	pop	{r7, pc}
2000008c:	e000e010 	and	lr, r0, r0, lsl r0
20000090:	e000e014 	and	lr, r0, r4, lsl r0
20000094:	e000e018 	and	lr, r0, r8, lsl r0

20000098 <delay_micro>:

void delay_micro(unsigned int us)
{
20000098:	b580      	push	{r7, lr}
2000009a:	b082      	sub	sp, #8
2000009c:	af00      	add	r7, sp, #0
2000009e:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		us = us / 2500;
200000a0:	687b      	ldr	r3, [r7, #4]
200000a2:	490e      	ldr	r1, [pc, #56]	; (200000dc <delay_micro+0x44>)
200000a4:	0018      	movs	r0, r3
200000a6:	f000 f9b5 	bl	20000414 <__udivsi3>
200000aa:	0003      	movs	r3, r0
200000ac:	607b      	str	r3, [r7, #4]
		us++;
200000ae:	687b      	ldr	r3, [r7, #4]
200000b0:	3301      	adds	r3, #1
200000b2:	607b      	str	r3, [r7, #4]
	#endif
	
	while(us > 0)
200000b4:	e00a      	b.n	200000cc <delay_micro+0x34>
	{
		delay_250ns();
200000b6:	f7ff ffce 	bl	20000056 <delay_250ns>
		delay_250ns();
200000ba:	f7ff ffcc 	bl	20000056 <delay_250ns>
		delay_250ns();
200000be:	f7ff ffca 	bl	20000056 <delay_250ns>
		delay_250ns();
200000c2:	f7ff ffc8 	bl	20000056 <delay_250ns>
		us--;
200000c6:	687b      	ldr	r3, [r7, #4]
200000c8:	3b01      	subs	r3, #1
200000ca:	607b      	str	r3, [r7, #4]
	while(us > 0)
200000cc:	687b      	ldr	r3, [r7, #4]
200000ce:	2b00      	cmp	r3, #0
200000d0:	d1f1      	bne.n	200000b6 <delay_micro+0x1e>
	}
}
200000d2:	46c0      	nop			; (mov r8, r8)
200000d4:	46c0      	nop			; (mov r8, r8)
200000d6:	46bd      	mov	sp, r7
200000d8:	b002      	add	sp, #8
200000da:	bd80      	pop	{r7, pc}
200000dc:	000009c4 	andeq	r0, r0, r4, asr #19

200000e0 <delay_milli>:

void delay_milli(unsigned int ms)
{
200000e0:	b580      	push	{r7, lr}
200000e2:	b082      	sub	sp, #8
200000e4:	af00      	add	r7, sp, #0
200000e6:	6078      	str	r0, [r7, #4]
	delay_micro(ms*1000);
200000e8:	687a      	ldr	r2, [r7, #4]
200000ea:	0013      	movs	r3, r2
200000ec:	015b      	lsls	r3, r3, #5
200000ee:	1a9b      	subs	r3, r3, r2
200000f0:	009b      	lsls	r3, r3, #2
200000f2:	189b      	adds	r3, r3, r2
200000f4:	00db      	lsls	r3, r3, #3
200000f6:	0018      	movs	r0, r3
200000f8:	f7ff ffce 	bl	20000098 <delay_micro>
}
200000fc:	46c0      	nop			; (mov r8, r8)
200000fe:	46bd      	mov	sp, r7
20000100:	b002      	add	sp, #8
20000102:	bd80      	pop	{r7, pc}

20000104 <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set(unsigned char x) {
20000104:	b580      	push	{r7, lr}
20000106:	b084      	sub	sp, #16
20000108:	af00      	add	r7, sp, #0
2000010a:	0002      	movs	r2, r0
2000010c:	1dfb      	adds	r3, r7, #7
2000010e:	701a      	strb	r2, [r3, #0]
	char c;
    c = *GPIO_E_ODR_LOW;
20000110:	4a09      	ldr	r2, [pc, #36]	; (20000138 <ascii_ctrl_bit_set+0x34>)
20000112:	210f      	movs	r1, #15
20000114:	187b      	adds	r3, r7, r1
20000116:	7812      	ldrb	r2, [r2, #0]
20000118:	701a      	strb	r2, [r3, #0]
    *GPIO_E_ODR_LOW = B_SELECT | x | c;
2000011a:	1dfa      	adds	r2, r7, #7
2000011c:	187b      	adds	r3, r7, r1
2000011e:	7812      	ldrb	r2, [r2, #0]
20000120:	781b      	ldrb	r3, [r3, #0]
20000122:	4313      	orrs	r3, r2
20000124:	b2db      	uxtb	r3, r3
20000126:	4a04      	ldr	r2, [pc, #16]	; (20000138 <ascii_ctrl_bit_set+0x34>)
20000128:	2104      	movs	r1, #4
2000012a:	430b      	orrs	r3, r1
2000012c:	b2db      	uxtb	r3, r3
2000012e:	7013      	strb	r3, [r2, #0]
}
20000130:	46c0      	nop			; (mov r8, r8)
20000132:	46bd      	mov	sp, r7
20000134:	b004      	add	sp, #16
20000136:	bd80      	pop	{r7, pc}
20000138:	40021014 	andmi	r1, r2, r4, lsl r0

2000013c <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x) {
2000013c:	b580      	push	{r7, lr}
2000013e:	b084      	sub	sp, #16
20000140:	af00      	add	r7, sp, #0
20000142:	0002      	movs	r2, r0
20000144:	1dfb      	adds	r3, r7, #7
20000146:	701a      	strb	r2, [r3, #0]
	char c;
	c = *GPIO_E_ODR_LOW;
20000148:	4a0d      	ldr	r2, [pc, #52]	; (20000180 <ascii_ctrl_bit_clear+0x44>)
2000014a:	210f      	movs	r1, #15
2000014c:	187b      	adds	r3, r7, r1
2000014e:	7812      	ldrb	r2, [r2, #0]
20000150:	701a      	strb	r2, [r3, #0]
	c = c & ~x;
20000152:	1dfb      	adds	r3, r7, #7
20000154:	781b      	ldrb	r3, [r3, #0]
20000156:	b25b      	sxtb	r3, r3
20000158:	43db      	mvns	r3, r3
2000015a:	b25b      	sxtb	r3, r3
2000015c:	187a      	adds	r2, r7, r1
2000015e:	7812      	ldrb	r2, [r2, #0]
20000160:	b252      	sxtb	r2, r2
20000162:	4013      	ands	r3, r2
20000164:	b25a      	sxtb	r2, r3
20000166:	187b      	adds	r3, r7, r1
20000168:	701a      	strb	r2, [r3, #0]
	*GPIO_E_ODR_LOW = B_SELECT | c;
2000016a:	4a05      	ldr	r2, [pc, #20]	; (20000180 <ascii_ctrl_bit_clear+0x44>)
2000016c:	187b      	adds	r3, r7, r1
2000016e:	781b      	ldrb	r3, [r3, #0]
20000170:	2104      	movs	r1, #4
20000172:	430b      	orrs	r3, r1
20000174:	b2db      	uxtb	r3, r3
20000176:	7013      	strb	r3, [r2, #0]
}
20000178:	46c0      	nop			; (mov r8, r8)
2000017a:	46bd      	mov	sp, r7
2000017c:	b004      	add	sp, #16
2000017e:	bd80      	pop	{r7, pc}
20000180:	40021014 	andmi	r1, r2, r4, lsl r0

20000184 <ascii_write_controller>:

void ascii_write_controller(char c) {
20000184:	b580      	push	{r7, lr}
20000186:	b082      	sub	sp, #8
20000188:	af00      	add	r7, sp, #0
2000018a:	0002      	movs	r2, r0
2000018c:	1dfb      	adds	r3, r7, #7
2000018e:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_E);
20000190:	2040      	movs	r0, #64	; 0x40
20000192:	f7ff ffb7 	bl	20000104 <ascii_ctrl_bit_set>
	*GPIO_E_ODR_HIGH = c;
20000196:	4a06      	ldr	r2, [pc, #24]	; (200001b0 <ascii_write_controller+0x2c>)
20000198:	1dfb      	adds	r3, r7, #7
2000019a:	781b      	ldrb	r3, [r3, #0]
2000019c:	7013      	strb	r3, [r2, #0]
	ascii_ctrl_bit_clear(B_E);
2000019e:	2040      	movs	r0, #64	; 0x40
200001a0:	f7ff ffcc 	bl	2000013c <ascii_ctrl_bit_clear>
	delay_250ns();
200001a4:	f7ff ff57 	bl	20000056 <delay_250ns>
}
200001a8:	46c0      	nop			; (mov r8, r8)
200001aa:	46bd      	mov	sp, r7
200001ac:	b002      	add	sp, #8
200001ae:	bd80      	pop	{r7, pc}
200001b0:	40021015 	andmi	r1, r2, r5, lsl r0

200001b4 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command)
{
200001b4:	b580      	push	{r7, lr}
200001b6:	b082      	sub	sp, #8
200001b8:	af00      	add	r7, sp, #0
200001ba:	0002      	movs	r2, r0
200001bc:	1dfb      	adds	r3, r7, #7
200001be:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
200001c0:	2001      	movs	r0, #1
200001c2:	f7ff ffbb 	bl	2000013c <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200001c6:	2002      	movs	r0, #2
200001c8:	f7ff ffb8 	bl	2000013c <ascii_ctrl_bit_clear>
	
	ascii_write_controller(command);
200001cc:	1dfb      	adds	r3, r7, #7
200001ce:	781b      	ldrb	r3, [r3, #0]
200001d0:	0018      	movs	r0, r3
200001d2:	f7ff ffd7 	bl	20000184 <ascii_write_controller>
}
200001d6:	46c0      	nop			; (mov r8, r8)
200001d8:	46bd      	mov	sp, r7
200001da:	b002      	add	sp, #8
200001dc:	bd80      	pop	{r7, pc}

200001de <ascii_write_data>:

void ascii_write_data(unsigned char data)
{
200001de:	b580      	push	{r7, lr}
200001e0:	b082      	sub	sp, #8
200001e2:	af00      	add	r7, sp, #0
200001e4:	0002      	movs	r2, r0
200001e6:	1dfb      	adds	r3, r7, #7
200001e8:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200001ea:	2001      	movs	r0, #1
200001ec:	f7ff ff8a 	bl	20000104 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
200001f0:	2002      	movs	r0, #2
200001f2:	f7ff ffa3 	bl	2000013c <ascii_ctrl_bit_clear>
	
	ascii_write_controller(data);
200001f6:	1dfb      	adds	r3, r7, #7
200001f8:	781b      	ldrb	r3, [r3, #0]
200001fa:	0018      	movs	r0, r3
200001fc:	f7ff ffc2 	bl	20000184 <ascii_write_controller>
}
20000200:	46c0      	nop			; (mov r8, r8)
20000202:	46bd      	mov	sp, r7
20000204:	b002      	add	sp, #8
20000206:	bd80      	pop	{r7, pc}

20000208 <ascii_read_controller>:

unsigned char ascii_read_controller(void) {
20000208:	b580      	push	{r7, lr}
2000020a:	b082      	sub	sp, #8
2000020c:	af00      	add	r7, sp, #0
	char c;
	ascii_ctrl_bit_set(B_E);
2000020e:	2040      	movs	r0, #64	; 0x40
20000210:	f7ff ff78 	bl	20000104 <ascii_ctrl_bit_set>
	delay_250ns();
20000214:	f7ff ff1f 	bl	20000056 <delay_250ns>
	delay_250ns();
20000218:	f7ff ff1d 	bl	20000056 <delay_250ns>
	c = *GPIO_E_IDR_HIGH;
2000021c:	4a06      	ldr	r2, [pc, #24]	; (20000238 <ascii_read_controller+0x30>)
2000021e:	1dfb      	adds	r3, r7, #7
20000220:	7812      	ldrb	r2, [r2, #0]
20000222:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
20000224:	2040      	movs	r0, #64	; 0x40
20000226:	f7ff ff89 	bl	2000013c <ascii_ctrl_bit_clear>
	return c;
2000022a:	1dfb      	adds	r3, r7, #7
2000022c:	781b      	ldrb	r3, [r3, #0]
}
2000022e:	0018      	movs	r0, r3
20000230:	46bd      	mov	sp, r7
20000232:	b002      	add	sp, #8
20000234:	bd80      	pop	{r7, pc}
20000236:	46c0      	nop			; (mov r8, r8)
20000238:	40021011 	andmi	r1, r2, r1, lsl r0

2000023c <ascii_read_status>:

unsigned char ascii_read_status() {
2000023c:	b590      	push	{r4, r7, lr}
2000023e:	b083      	sub	sp, #12
20000240:	af00      	add	r7, sp, #0
	char c;
	*GPIO_E_MODER = 0x00005555;
20000242:	4b0b      	ldr	r3, [pc, #44]	; (20000270 <ascii_read_status+0x34>)
20000244:	4a0b      	ldr	r2, [pc, #44]	; (20000274 <ascii_read_status+0x38>)
20000246:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RW);
20000248:	2002      	movs	r0, #2
2000024a:	f7ff ff5b 	bl	20000104 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RS);
2000024e:	2001      	movs	r0, #1
20000250:	f7ff ff74 	bl	2000013c <ascii_ctrl_bit_clear>
	c = ascii_read_controller();
20000254:	1dfc      	adds	r4, r7, #7
20000256:	f7ff ffd7 	bl	20000208 <ascii_read_controller>
2000025a:	0003      	movs	r3, r0
2000025c:	7023      	strb	r3, [r4, #0]
	*GPIO_E_MODER = 0x55555555;
2000025e:	4b04      	ldr	r3, [pc, #16]	; (20000270 <ascii_read_status+0x34>)
20000260:	4a05      	ldr	r2, [pc, #20]	; (20000278 <ascii_read_status+0x3c>)
20000262:	601a      	str	r2, [r3, #0]
	return c;
20000264:	1dfb      	adds	r3, r7, #7
20000266:	781b      	ldrb	r3, [r3, #0]
}
20000268:	0018      	movs	r0, r3
2000026a:	46bd      	mov	sp, r7
2000026c:	b003      	add	sp, #12
2000026e:	bd90      	pop	{r4, r7, pc}
20000270:	40021000 	andmi	r1, r2, r0
20000274:	00005555 	andeq	r5, r0, r5, asr r5
20000278:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

2000027c <ascii_read_data>:

unsigned char ascii_read_data(void)
{
2000027c:	b590      	push	{r4, r7, lr}
2000027e:	b083      	sub	sp, #12
20000280:	af00      	add	r7, sp, #0
	char c;
	*GPIO_E_MODER = 0x00005555;
20000282:	4b0b      	ldr	r3, [pc, #44]	; (200002b0 <ascii_read_data+0x34>)
20000284:	4a0b      	ldr	r2, [pc, #44]	; (200002b4 <ascii_read_data+0x38>)
20000286:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20000288:	2001      	movs	r0, #1
2000028a:	f7ff ff3b 	bl	20000104 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
2000028e:	2002      	movs	r0, #2
20000290:	f7ff ff38 	bl	20000104 <ascii_ctrl_bit_set>
	c = ascii_read_controller();
20000294:	1dfc      	adds	r4, r7, #7
20000296:	f7ff ffb7 	bl	20000208 <ascii_read_controller>
2000029a:	0003      	movs	r3, r0
2000029c:	7023      	strb	r3, [r4, #0]
	*GPIO_E_MODER = 0x55555555;
2000029e:	4b04      	ldr	r3, [pc, #16]	; (200002b0 <ascii_read_data+0x34>)
200002a0:	4a05      	ldr	r2, [pc, #20]	; (200002b8 <ascii_read_data+0x3c>)
200002a2:	601a      	str	r2, [r3, #0]
	return c;
200002a4:	1dfb      	adds	r3, r7, #7
200002a6:	781b      	ldrb	r3, [r3, #0]
}
200002a8:	0018      	movs	r0, r3
200002aa:	46bd      	mov	sp, r7
200002ac:	b003      	add	sp, #12
200002ae:	bd90      	pop	{r4, r7, pc}
200002b0:	40021000 	andmi	r1, r2, r0
200002b4:	00005555 	andeq	r5, r0, r5, asr r5
200002b8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200002bc <ascii_command>:

void ascii_command(unsigned char command)
{
200002bc:	b580      	push	{r7, lr}
200002be:	b082      	sub	sp, #8
200002c0:	af00      	add	r7, sp, #0
200002c2:	0002      	movs	r2, r0
200002c4:	1dfb      	adds	r3, r7, #7
200002c6:	701a      	strb	r2, [r3, #0]
	while((ascii_read_status() & 0x80) == 0x80);
200002c8:	46c0      	nop			; (mov r8, r8)
200002ca:	f7ff ffb7 	bl	2000023c <ascii_read_status>
200002ce:	0003      	movs	r3, r0
200002d0:	001a      	movs	r2, r3
200002d2:	2380      	movs	r3, #128	; 0x80
200002d4:	4013      	ands	r3, r2
200002d6:	2b80      	cmp	r3, #128	; 0x80
200002d8:	d0f7      	beq.n	200002ca <ascii_command+0xe>
	delay_micro(8);
200002da:	2008      	movs	r0, #8
200002dc:	f7ff fedc 	bl	20000098 <delay_micro>
	ascii_write_cmd(command);
200002e0:	1dfb      	adds	r3, r7, #7
200002e2:	781b      	ldrb	r3, [r3, #0]
200002e4:	0018      	movs	r0, r3
200002e6:	f7ff ff65 	bl	200001b4 <ascii_write_cmd>
	
	if((command == 1 || (command & 2) == 2)) 	delay_milli(2);
200002ea:	1dfb      	adds	r3, r7, #7
200002ec:	781b      	ldrb	r3, [r3, #0]
200002ee:	2b01      	cmp	r3, #1
200002f0:	d004      	beq.n	200002fc <ascii_command+0x40>
200002f2:	1dfb      	adds	r3, r7, #7
200002f4:	781b      	ldrb	r3, [r3, #0]
200002f6:	2202      	movs	r2, #2
200002f8:	4013      	ands	r3, r2
200002fa:	d003      	beq.n	20000304 <ascii_command+0x48>
200002fc:	2002      	movs	r0, #2
200002fe:	f7ff feef 	bl	200000e0 <delay_milli>
20000302:	e002      	b.n	2000030a <ascii_command+0x4e>
	else if((command & 0x40) == 1) return;
	else delay_micro(45);
20000304:	202d      	movs	r0, #45	; 0x2d
20000306:	f7ff fec7 	bl	20000098 <delay_micro>
}
2000030a:	46bd      	mov	sp, r7
2000030c:	b002      	add	sp, #8
2000030e:	bd80      	pop	{r7, pc}

20000310 <ascii_write_char>:

void ascii_write_char(unsigned char c)
{
20000310:	b580      	push	{r7, lr}
20000312:	b082      	sub	sp, #8
20000314:	af00      	add	r7, sp, #0
20000316:	0002      	movs	r2, r0
20000318:	1dfb      	adds	r3, r7, #7
2000031a:	701a      	strb	r2, [r3, #0]
	while((ascii_read_status() & 0x80) == 0x80);
2000031c:	46c0      	nop			; (mov r8, r8)
2000031e:	f7ff ff8d 	bl	2000023c <ascii_read_status>
20000322:	0003      	movs	r3, r0
20000324:	001a      	movs	r2, r3
20000326:	2380      	movs	r3, #128	; 0x80
20000328:	4013      	ands	r3, r2
2000032a:	2b80      	cmp	r3, #128	; 0x80
2000032c:	d0f7      	beq.n	2000031e <ascii_write_char+0xe>
	delay_micro(8);
2000032e:	2008      	movs	r0, #8
20000330:	f7ff feb2 	bl	20000098 <delay_micro>
	ascii_write_data(c);
20000334:	1dfb      	adds	r3, r7, #7
20000336:	781b      	ldrb	r3, [r3, #0]
20000338:	0018      	movs	r0, r3
2000033a:	f7ff ff50 	bl	200001de <ascii_write_data>
	delay_micro(45);
2000033e:	202d      	movs	r0, #45	; 0x2d
20000340:	f7ff feaa 	bl	20000098 <delay_micro>
}
20000344:	46c0      	nop			; (mov r8, r8)
20000346:	46bd      	mov	sp, r7
20000348:	b002      	add	sp, #8
2000034a:	bd80      	pop	{r7, pc}

2000034c <ascii_gotoxy>:

void ascii_gotoxy(unsigned char row, unsigned char col)
{
2000034c:	b580      	push	{r7, lr}
2000034e:	b084      	sub	sp, #16
20000350:	af00      	add	r7, sp, #0
20000352:	0002      	movs	r2, r0
20000354:	1dfb      	adds	r3, r7, #7
20000356:	701a      	strb	r2, [r3, #0]
20000358:	1dbb      	adds	r3, r7, #6
2000035a:	1c0a      	adds	r2, r1, #0
2000035c:	701a      	strb	r2, [r3, #0]
	unsigned int address = row - 1;
2000035e:	1dfb      	adds	r3, r7, #7
20000360:	781b      	ldrb	r3, [r3, #0]
20000362:	3b01      	subs	r3, #1
20000364:	60fb      	str	r3, [r7, #12]
	if(col == 2) address = address + 0x40;
20000366:	1dbb      	adds	r3, r7, #6
20000368:	781b      	ldrb	r3, [r3, #0]
2000036a:	2b02      	cmp	r3, #2
2000036c:	d102      	bne.n	20000374 <ascii_gotoxy+0x28>
2000036e:	68fb      	ldr	r3, [r7, #12]
20000370:	3340      	adds	r3, #64	; 0x40
20000372:	60fb      	str	r3, [r7, #12]
	ascii_write_cmd(0x80 | address);
20000374:	68fb      	ldr	r3, [r7, #12]
20000376:	b2db      	uxtb	r3, r3
20000378:	2280      	movs	r2, #128	; 0x80
2000037a:	4252      	negs	r2, r2
2000037c:	4313      	orrs	r3, r2
2000037e:	b2db      	uxtb	r3, r3
20000380:	0018      	movs	r0, r3
20000382:	f7ff ff17 	bl	200001b4 <ascii_write_cmd>
}
20000386:	46c0      	nop			; (mov r8, r8)
20000388:	46bd      	mov	sp, r7
2000038a:	b004      	add	sp, #16
2000038c:	bd80      	pop	{r7, pc}

2000038e <main>:

void main(void)
{
2000038e:	b5b0      	push	{r4, r5, r7, lr}
20000390:	b08a      	sub	sp, #40	; 0x28
20000392:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk ";
20000394:	2414      	movs	r4, #20
20000396:	193b      	adds	r3, r7, r4
20000398:	4a1c      	ldr	r2, [pc, #112]	; (2000040c <main+0x7e>)
2000039a:	ca23      	ldmia	r2!, {r0, r1, r5}
2000039c:	c323      	stmia	r3!, {r0, r1, r5}
2000039e:	8812      	ldrh	r2, [r2, #0]
200003a0:	801a      	strh	r2, [r3, #0]
	char test2[] = "Display - test";
200003a2:	1d3b      	adds	r3, r7, #4
200003a4:	4a1a      	ldr	r2, [pc, #104]	; (20000410 <main+0x82>)
200003a6:	ca23      	ldmia	r2!, {r0, r1, r5}
200003a8:	c323      	stmia	r3!, {r0, r1, r5}
200003aa:	8811      	ldrh	r1, [r2, #0]
200003ac:	8019      	strh	r1, [r3, #0]
200003ae:	7892      	ldrb	r2, [r2, #2]
200003b0:	709a      	strb	r2, [r3, #2]
	init_app();
200003b2:	f7ff fe2d 	bl	20000010 <init_app>
	ascii_init();
200003b6:	f7ff fe37 	bl	20000028 <ascii_init>
	ascii_gotoxy(1,1);
200003ba:	2101      	movs	r1, #1
200003bc:	2001      	movs	r0, #1
200003be:	f7ff ffc5 	bl	2000034c <ascii_gotoxy>
	s = test1;
200003c2:	193b      	adds	r3, r7, r4
200003c4:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s)
200003c6:	e006      	b.n	200003d6 <main+0x48>
		ascii_write_char(*s++);
200003c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003ca:	1c5a      	adds	r2, r3, #1
200003cc:	627a      	str	r2, [r7, #36]	; 0x24
200003ce:	781b      	ldrb	r3, [r3, #0]
200003d0:	0018      	movs	r0, r3
200003d2:	f7ff ff9d 	bl	20000310 <ascii_write_char>
	while(*s)
200003d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003d8:	781b      	ldrb	r3, [r3, #0]
200003da:	2b00      	cmp	r3, #0
200003dc:	d1f4      	bne.n	200003c8 <main+0x3a>
	ascii_gotoxy(1,2);
200003de:	2102      	movs	r1, #2
200003e0:	2001      	movs	r0, #1
200003e2:	f7ff ffb3 	bl	2000034c <ascii_gotoxy>
	s = test2;
200003e6:	1d3b      	adds	r3, r7, #4
200003e8:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s)
200003ea:	e006      	b.n	200003fa <main+0x6c>
		ascii_write_char(*s++);
200003ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003ee:	1c5a      	adds	r2, r3, #1
200003f0:	627a      	str	r2, [r7, #36]	; 0x24
200003f2:	781b      	ldrb	r3, [r3, #0]
200003f4:	0018      	movs	r0, r3
200003f6:	f7ff ff8b 	bl	20000310 <ascii_write_char>
	while(*s)
200003fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200003fc:	781b      	ldrb	r3, [r3, #0]
200003fe:	2b00      	cmp	r3, #0
20000400:	d1f4      	bne.n	200003ec <main+0x5e>
	return 0; 
20000402:	46c0      	nop			; (mov r8, r8)
20000404:	46bd      	mov	sp, r7
20000406:	b00a      	add	sp, #40	; 0x28
20000408:	bdb0      	pop	{r4, r5, r7, pc}
2000040a:	46c0      	nop			; (mov r8, r8)
2000040c:	2000052c 	andcs	r0, r0, ip, lsr #10
20000410:	2000053c 	andcs	r0, r0, ip, lsr r5

20000414 <__udivsi3>:
20000414:	2200      	movs	r2, #0
20000416:	0843      	lsrs	r3, r0, #1
20000418:	428b      	cmp	r3, r1
2000041a:	d374      	bcc.n	20000506 <__udivsi3+0xf2>
2000041c:	0903      	lsrs	r3, r0, #4
2000041e:	428b      	cmp	r3, r1
20000420:	d35f      	bcc.n	200004e2 <__udivsi3+0xce>
20000422:	0a03      	lsrs	r3, r0, #8
20000424:	428b      	cmp	r3, r1
20000426:	d344      	bcc.n	200004b2 <__udivsi3+0x9e>
20000428:	0b03      	lsrs	r3, r0, #12
2000042a:	428b      	cmp	r3, r1
2000042c:	d328      	bcc.n	20000480 <__udivsi3+0x6c>
2000042e:	0c03      	lsrs	r3, r0, #16
20000430:	428b      	cmp	r3, r1
20000432:	d30d      	bcc.n	20000450 <__udivsi3+0x3c>
20000434:	22ff      	movs	r2, #255	; 0xff
20000436:	0209      	lsls	r1, r1, #8
20000438:	ba12      	rev	r2, r2
2000043a:	0c03      	lsrs	r3, r0, #16
2000043c:	428b      	cmp	r3, r1
2000043e:	d302      	bcc.n	20000446 <__udivsi3+0x32>
20000440:	1212      	asrs	r2, r2, #8
20000442:	0209      	lsls	r1, r1, #8
20000444:	d065      	beq.n	20000512 <__udivsi3+0xfe>
20000446:	0b03      	lsrs	r3, r0, #12
20000448:	428b      	cmp	r3, r1
2000044a:	d319      	bcc.n	20000480 <__udivsi3+0x6c>
2000044c:	e000      	b.n	20000450 <__udivsi3+0x3c>
2000044e:	0a09      	lsrs	r1, r1, #8
20000450:	0bc3      	lsrs	r3, r0, #15
20000452:	428b      	cmp	r3, r1
20000454:	d301      	bcc.n	2000045a <__udivsi3+0x46>
20000456:	03cb      	lsls	r3, r1, #15
20000458:	1ac0      	subs	r0, r0, r3
2000045a:	4152      	adcs	r2, r2
2000045c:	0b83      	lsrs	r3, r0, #14
2000045e:	428b      	cmp	r3, r1
20000460:	d301      	bcc.n	20000466 <__udivsi3+0x52>
20000462:	038b      	lsls	r3, r1, #14
20000464:	1ac0      	subs	r0, r0, r3
20000466:	4152      	adcs	r2, r2
20000468:	0b43      	lsrs	r3, r0, #13
2000046a:	428b      	cmp	r3, r1
2000046c:	d301      	bcc.n	20000472 <__udivsi3+0x5e>
2000046e:	034b      	lsls	r3, r1, #13
20000470:	1ac0      	subs	r0, r0, r3
20000472:	4152      	adcs	r2, r2
20000474:	0b03      	lsrs	r3, r0, #12
20000476:	428b      	cmp	r3, r1
20000478:	d301      	bcc.n	2000047e <__udivsi3+0x6a>
2000047a:	030b      	lsls	r3, r1, #12
2000047c:	1ac0      	subs	r0, r0, r3
2000047e:	4152      	adcs	r2, r2
20000480:	0ac3      	lsrs	r3, r0, #11
20000482:	428b      	cmp	r3, r1
20000484:	d301      	bcc.n	2000048a <__udivsi3+0x76>
20000486:	02cb      	lsls	r3, r1, #11
20000488:	1ac0      	subs	r0, r0, r3
2000048a:	4152      	adcs	r2, r2
2000048c:	0a83      	lsrs	r3, r0, #10
2000048e:	428b      	cmp	r3, r1
20000490:	d301      	bcc.n	20000496 <__udivsi3+0x82>
20000492:	028b      	lsls	r3, r1, #10
20000494:	1ac0      	subs	r0, r0, r3
20000496:	4152      	adcs	r2, r2
20000498:	0a43      	lsrs	r3, r0, #9
2000049a:	428b      	cmp	r3, r1
2000049c:	d301      	bcc.n	200004a2 <__udivsi3+0x8e>
2000049e:	024b      	lsls	r3, r1, #9
200004a0:	1ac0      	subs	r0, r0, r3
200004a2:	4152      	adcs	r2, r2
200004a4:	0a03      	lsrs	r3, r0, #8
200004a6:	428b      	cmp	r3, r1
200004a8:	d301      	bcc.n	200004ae <__udivsi3+0x9a>
200004aa:	020b      	lsls	r3, r1, #8
200004ac:	1ac0      	subs	r0, r0, r3
200004ae:	4152      	adcs	r2, r2
200004b0:	d2cd      	bcs.n	2000044e <__udivsi3+0x3a>
200004b2:	09c3      	lsrs	r3, r0, #7
200004b4:	428b      	cmp	r3, r1
200004b6:	d301      	bcc.n	200004bc <__udivsi3+0xa8>
200004b8:	01cb      	lsls	r3, r1, #7
200004ba:	1ac0      	subs	r0, r0, r3
200004bc:	4152      	adcs	r2, r2
200004be:	0983      	lsrs	r3, r0, #6
200004c0:	428b      	cmp	r3, r1
200004c2:	d301      	bcc.n	200004c8 <__udivsi3+0xb4>
200004c4:	018b      	lsls	r3, r1, #6
200004c6:	1ac0      	subs	r0, r0, r3
200004c8:	4152      	adcs	r2, r2
200004ca:	0943      	lsrs	r3, r0, #5
200004cc:	428b      	cmp	r3, r1
200004ce:	d301      	bcc.n	200004d4 <__udivsi3+0xc0>
200004d0:	014b      	lsls	r3, r1, #5
200004d2:	1ac0      	subs	r0, r0, r3
200004d4:	4152      	adcs	r2, r2
200004d6:	0903      	lsrs	r3, r0, #4
200004d8:	428b      	cmp	r3, r1
200004da:	d301      	bcc.n	200004e0 <__udivsi3+0xcc>
200004dc:	010b      	lsls	r3, r1, #4
200004de:	1ac0      	subs	r0, r0, r3
200004e0:	4152      	adcs	r2, r2
200004e2:	08c3      	lsrs	r3, r0, #3
200004e4:	428b      	cmp	r3, r1
200004e6:	d301      	bcc.n	200004ec <__udivsi3+0xd8>
200004e8:	00cb      	lsls	r3, r1, #3
200004ea:	1ac0      	subs	r0, r0, r3
200004ec:	4152      	adcs	r2, r2
200004ee:	0883      	lsrs	r3, r0, #2
200004f0:	428b      	cmp	r3, r1
200004f2:	d301      	bcc.n	200004f8 <__udivsi3+0xe4>
200004f4:	008b      	lsls	r3, r1, #2
200004f6:	1ac0      	subs	r0, r0, r3
200004f8:	4152      	adcs	r2, r2
200004fa:	0843      	lsrs	r3, r0, #1
200004fc:	428b      	cmp	r3, r1
200004fe:	d301      	bcc.n	20000504 <__udivsi3+0xf0>
20000500:	004b      	lsls	r3, r1, #1
20000502:	1ac0      	subs	r0, r0, r3
20000504:	4152      	adcs	r2, r2
20000506:	1a41      	subs	r1, r0, r1
20000508:	d200      	bcs.n	2000050c <__udivsi3+0xf8>
2000050a:	4601      	mov	r1, r0
2000050c:	4152      	adcs	r2, r2
2000050e:	4610      	mov	r0, r2
20000510:	4770      	bx	lr
20000512:	e7ff      	b.n	20000514 <__udivsi3+0x100>
20000514:	b501      	push	{r0, lr}
20000516:	2000      	movs	r0, #0
20000518:	f000 f806 	bl	20000528 <__aeabi_idiv0>
2000051c:	bd02      	pop	{r1, pc}
2000051e:	46c0      	nop			; (mov r8, r8)

20000520 <__aeabi_uidivmod>:
20000520:	2900      	cmp	r1, #0
20000522:	d0f7      	beq.n	20000514 <__udivsi3+0x100>
20000524:	e776      	b.n	20000414 <__udivsi3>
20000526:	4770      	bx	lr

20000528 <__aeabi_idiv0>:
20000528:	4770      	bx	lr
2000052a:	46c0      	nop			; (mov r8, r8)
2000052c:	61666c41 	cmnvs	r6, r1, asr #24
20000530:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
20000534:	6b736972 	blvs	21cdab04 <__aeabi_idiv0+0x1cda5dc>
20000538:	00000020 	andeq	r0, r0, r0, lsr #32
2000053c:	70736944 	rsbsvc	r6, r3, r4, asr #18
20000540:	2079616c 	rsbscs	r6, r9, ip, ror #2
20000544:	6574202d 	ldrbvs	r2, [r4, #-45]!	; 0xffffffd3
20000548:	00007473 	andeq	r7, r0, r3, ror r4

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000335 	andeq	r0, r0, r5, lsr r3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000071 	andeq	r0, r0, r1, ror r0
  10:	0001af0c 	andeq	sl, r1, ip, lsl #30
  14:	00013400 	andeq	r3, r1, r0, lsl #8
	...
  24:	01880200 	orreq	r0, r8, r0, lsl #4
  28:	b3010000 	movwlt	r0, #4096	; 0x1000
  2c:	00038e06 	andeq	r8, r3, r6, lsl #28
  30:	00008620 	andeq	r8, r0, r0, lsr #12
  34:	679c0100 	ldrvs	r0, [ip, r0, lsl #2]
  38:	03000000 	movweq	r0, #0
  3c:	b5010073 	strlt	r0, [r1, #-115]	; 0xffffff8d
  40:	00006708 	andeq	r6, r0, r8, lsl #14
  44:	6c910200 	lfmvs	f0, 4, [r1], {0}
  48:	0001a304 	andeq	sl, r1, r4, lsl #6
  4c:	07b60100 	ldreq	r0, [r6, r0, lsl #2]!
  50:	00000074 	andeq	r0, r0, r4, ror r0
  54:	045c9102 	ldrbeq	r9, [ip], #-258	; 0xfffffefe
  58:	000001a9 	andeq	r0, r0, r9, lsr #3
  5c:	8b07b701 	blhi	1edc68 <startup-0x1fe12398>
  60:	02000000 	andeq	r0, r0, #0
  64:	05004c91 	streq	r4, [r0, #-3217]	; 0xfffff36f
  68:	00006d04 	andeq	r6, r0, r4, lsl #26
  6c:	08010600 	stmdaeq	r1, {r9, sl}
  70:	00000183 	andeq	r0, r0, r3, lsl #3
  74:	00006d07 	andeq	r6, r0, r7, lsl #26
  78:	00008400 	andeq	r8, r0, r0, lsl #8
  7c:	00840800 	addeq	r0, r4, r0, lsl #16
  80:	000d0000 	andeq	r0, sp, r0
  84:	19070406 	stmdbne	r7, {r1, r2, sl}
  88:	07000000 	streq	r0, [r0, -r0]
  8c:	0000006d 	andeq	r0, r0, sp, rrx
  90:	0000009b 	muleq	r0, fp, r0
  94:	00008408 	andeq	r8, r0, r8, lsl #8
  98:	02000e00 	andeq	r0, r0, #0, 28
  9c:	0000000c 	andeq	r0, r0, ip
  a0:	4c06ac01 	stcmi	12, cr10, [r6], {1}
  a4:	42200003 	eormi	r0, r0, #3
  a8:	01000000 	mrseq	r0, (UNDEF: 0)
  ac:	0000df9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
  b0:	6f720900 	svcvs	0x00720900
  b4:	ac010077 	stcge	0, cr0, [r1], {119}	; 0x77
  b8:	0000df21 	andeq	sp, r0, r1, lsr #30
  bc:	6f910200 	svcvs	0x00910200
  c0:	6c6f6309 	stclvs	3, cr6, [pc], #-36	; a4 <startup-0x1fffff5c>
  c4:	34ac0100 	strtcc	r0, [ip], #256	; 0x100
  c8:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
  cc:	046e9102 	strbteq	r9, [lr], #-258	; 0xfffffefe
  d0:	0000011c 	andeq	r0, r0, ip, lsl r1
  d4:	840fae01 	strhi	sl, [pc], #-3585	; dc <startup-0x1fffff24>
  d8:	02000000 	andeq	r0, r0, #0
  dc:	06007491 			; <UNDEFINED> instruction: 0x06007491
  e0:	017a0801 	cmneq	sl, r1, lsl #16
  e4:	03020000 	movweq	r0, #8192	; 0x2000
  e8:	01000002 	tsteq	r0, r2
  ec:	031006a4 	tsteq	r0, #164, 12	; 0xa400000
  f0:	003c2000 	eorseq	r2, ip, r0
  f4:	9c010000 	stcls	0, cr0, [r1], {-0}
  f8:	0000010a 	andeq	r0, r0, sl, lsl #2
  fc:	01006309 	tsteq	r0, r9, lsl #6
 100:	00df25a4 	sbcseq	r2, pc, r4, lsr #11
 104:	91020000 	mrsls	r0, (UNDEF: 2)
 108:	8d020077 	stchi	0, cr0, [r2, #-476]	; 0xfffffe24
 10c:	01000001 	tsteq	r0, r1
 110:	02bc0699 	adcseq	r0, ip, #160432128	; 0x9900000
 114:	00542000 	subseq	r2, r4, r0
 118:	9c010000 	stcls	0, cr0, [r1], {-0}
 11c:	00000130 	andeq	r0, r0, r0, lsr r1
 120:	0001930a 	andeq	r9, r1, sl, lsl #6
 124:	22990100 	addscs	r0, r9, #0, 2
 128:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 12c:	00779102 	rsbseq	r9, r7, r2, lsl #2
 130:	0001240b 	andeq	r2, r1, fp, lsl #8
 134:	0f8e0100 	svceq	0x008e0100
 138:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 13c:	2000027c 	andcs	r0, r0, ip, ror r2
 140:	00000040 	andeq	r0, r0, r0, asr #32
 144:	01589c01 	cmpeq	r8, r1, lsl #24
 148:	63030000 	movwvs	r0, #12288	; 0x3000
 14c:	07900100 	ldreq	r0, [r0, r0, lsl #2]
 150:	0000006d 	andeq	r0, r0, sp, rrx
 154:	006f9102 	rsbeq	r9, pc, r2, lsl #2
 158:	0000ed0c 	andeq	lr, r0, ip, lsl #26
 15c:	0f840100 	svceq	0x00840100
 160:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 164:	2000023c 	andcs	r0, r0, ip, lsr r2
 168:	00000040 	andeq	r0, r0, r0, asr #32
 16c:	01809c01 	orreq	r9, r0, r1, lsl #24
 170:	63030000 	movwvs	r0, #12288	; 0x3000
 174:	07850100 	streq	r0, [r5, r0, lsl #2]
 178:	0000006d 	andeq	r0, r0, sp, rrx
 17c:	006f9102 	rsbeq	r9, pc, r2, lsl #2
 180:	00003b0b 	andeq	r3, r0, fp, lsl #22
 184:	0f7a0100 	svceq	0x007a0100
 188:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 18c:	20000208 	andcs	r0, r0, r8, lsl #4
 190:	00000034 	andeq	r0, r0, r4, lsr r0
 194:	01a89c01 			; <UNDEFINED> instruction: 0x01a89c01
 198:	63030000 	movwvs	r0, #12288	; 0x3000
 19c:	077b0100 	ldrbeq	r0, [fp, -r0, lsl #2]!
 1a0:	0000006d 	andeq	r0, r0, sp, rrx
 1a4:	00779102 	rsbseq	r9, r7, r2, lsl #2
 1a8:	0000ff02 	andeq	pc, r0, r2, lsl #30
 1ac:	06720100 	ldrbteq	r0, [r2], -r0, lsl #2
 1b0:	200001de 	ldrdcs	r0, [r0], -lr
 1b4:	0000002a 	andeq	r0, r0, sl, lsr #32
 1b8:	01ce9c01 	biceq	r9, lr, r1, lsl #24
 1bc:	2f0a0000 	svccs	0x000a0000
 1c0:	01000001 	tsteq	r0, r1
 1c4:	00df2572 	sbcseq	r2, pc, r2, ror r5	; <UNPREDICTABLE>
 1c8:	91020000 	mrsls	r0, (UNDEF: 2)
 1cc:	f3020077 	vqadd.u8	q0, q1, <illegal reg q11.5>
 1d0:	01000001 	tsteq	r0, r1
 1d4:	01b4066a 			; <UNDEFINED> instruction: 0x01b4066a
 1d8:	002a2000 	eoreq	r2, sl, r0
 1dc:	9c010000 	stcls	0, cr0, [r1], {-0}
 1e0:	000001f4 	strdeq	r0, [r0], -r4
 1e4:	0001930a 	andeq	r9, r1, sl, lsl #6
 1e8:	246a0100 	strbtcs	r0, [sl], #-256	; 0xffffff00
 1ec:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 1f0:	00779102 	rsbseq	r9, r7, r2, lsl #2
 1f4:	00005102 	andeq	r5, r0, r2, lsl #2
 1f8:	06630100 	strbteq	r0, [r3], -r0, lsl #2
 1fc:	20000184 	andcs	r0, r0, r4, lsl #3
 200:	00000030 	andeq	r0, r0, r0, lsr r0
 204:	02189c01 	andseq	r9, r8, #256	; 0x100
 208:	63090000 	movwvs	r0, #36864	; 0x9000
 20c:	22630100 	rsbcs	r0, r3, #0, 2
 210:	0000006d 	andeq	r0, r0, sp, rrx
 214:	00779102 	rsbseq	r9, r7, r2, lsl #2
 218:	0000260d 	andeq	r2, r0, sp, lsl #12
 21c:	065c0100 	ldrbeq	r0, [ip], -r0, lsl #2
 220:	2000013c 	andcs	r0, r0, ip, lsr r1
 224:	00000048 	andeq	r0, r0, r8, asr #32
 228:	02499c01 	subeq	r9, r9, #256	; 0x100
 22c:	78090000 	stmdavc	r9, {}	; <UNPREDICTABLE>
 230:	295c0100 	ldmdbcs	ip, {r8}^
 234:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 238:	036f9102 	cmneq	pc, #-2147483648	; 0x80000000
 23c:	5d010063 	stcpl	0, cr0, [r1, #-396]	; 0xfffffe74
 240:	00006d07 	andeq	r6, r0, r7, lsl #26
 244:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 248:	02140d00 	andseq	r0, r4, #0, 26
 24c:	56010000 	strpl	r0, [r1], -r0
 250:	00010406 	andeq	r0, r1, r6, lsl #8
 254:	00003820 	andeq	r3, r0, r0, lsr #16
 258:	7a9c0100 	bvc	fe700660 <__aeabi_idiv0+0xde700138>
 25c:	09000002 	stmdbeq	r0, {r1}
 260:	56010078 			; <UNDEFINED> instruction: 0x56010078
 264:	0000df27 	andeq	sp, r0, r7, lsr #30
 268:	6f910200 	svcvs	0x00910200
 26c:	01006303 	tsteq	r0, r3, lsl #6
 270:	006d0757 	rsbeq	r0, sp, r7, asr r7
 274:	91020000 	mrsls	r0, (UNDEF: 2)
 278:	00020077 	andeq	r0, r2, r7, ror r0
 27c:	01000000 	mrseq	r0, (UNDEF: 0)
 280:	00e00651 	rsceq	r0, r0, r1, asr r6
 284:	00242000 	eoreq	r2, r4, r0
 288:	9c010000 	stcls	0, cr0, [r1], {-0}
 28c:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
 290:	00736d09 	rsbseq	r6, r3, r9, lsl #26
 294:	841f5101 	ldrhi	r5, [pc], #-257	; 29c <startup-0x1ffffd64>
 298:	02000000 	andeq	r0, r0, #0
 29c:	02007491 	andeq	r7, r0, #-1862270976	; 0x91000000
 2a0:	0000016e 	andeq	r0, r0, lr, ror #2
 2a4:	98064001 	stmdals	r6, {r0, lr}
 2a8:	48200000 	stmdami	r0!, {}	; <UNPREDICTABLE>
 2ac:	01000000 	mrseq	r0, (UNDEF: 0)
 2b0:	0002c49c 	muleq	r2, ip, r4
 2b4:	73750900 	cmnvc	r5, #0, 18
 2b8:	1f400100 	svcne	0x00400100
 2bc:	00000084 	andeq	r0, r0, r4, lsl #1
 2c0:	00749102 	rsbseq	r9, r4, r2, lsl #2
 2c4:	0001100e 	andeq	r1, r1, lr
 2c8:	06350100 	ldrteq	r0, [r5], -r0, lsl #2
 2cc:	20000056 	andcs	r0, r0, r6, asr r0
 2d0:	00000042 	andeq	r0, r0, r2, asr #32
 2d4:	270f9c01 	strcs	r9, [pc, -r1, lsl #24]
 2d8:	01000002 	tsteq	r0, r2
 2dc:	0028062b 	eoreq	r0, r8, fp, lsr #12
 2e0:	002e2000 	eoreq	r2, lr, r0
 2e4:	9c010000 	stcls	0, cr0, [r1], {-0}
 2e8:	0000030d 	andeq	r0, r0, sp, lsl #6
 2ec:	00002610 	andeq	r2, r0, r0, lsl r6
 2f0:	052d0100 	streq	r0, [sp, #-256]!	; 0xffffff00
 2f4:	0000030d 	andeq	r0, r0, sp, lsl #6
 2f8:	000002fe 	strdeq	r0, [r0], -lr
 2fc:	8d120011 	ldchi	0, cr0, [r2, #-68]	; 0xffffffbc
 300:	01000001 	tsteq	r0, r1
 304:	030d052f 	movweq	r0, #54575	; 0xd52f
 308:	00110000 	andseq	r0, r1, r0
 30c:	05041300 	streq	r1, [r4, #-768]	; 0xfffffd00
 310:	00746e69 	rsbseq	r6, r4, r9, ror #28
 314:	00006814 	andeq	r6, r0, r4, lsl r8
 318:	06260100 	strteq	r0, [r6], -r0, lsl #2
 31c:	20000010 	andcs	r0, r0, r0, lsl r0
 320:	00000018 	andeq	r0, r0, r8, lsl r0
 324:	9b0e9c01 	blls	3a7330 <startup-0x1fc58cd0>
 328:	01000001 	tsteq	r0, r1
 32c:	0000061e 	andeq	r0, r0, lr, lsl r6
 330:	000c2000 	andeq	r2, ip, r0
 334:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194296 			; <UNDEFINED> instruction: 0x01194296
  2c:	03000013 	movweq	r0, #19
  30:	08030034 	stmdaeq	r3, {r2, r4, r5}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	; 0x9b39
  3c:	00001802 	andeq	r1, r0, r2, lsl #16
  40:	03003404 	movweq	r3, #1028	; 0x404
  44:	3b0b3a0e 	blcc	2ce884 <startup-0x1fd3177c>
  48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  4c:	00180213 	andseq	r0, r8, r3, lsl r2
  50:	000f0500 	andeq	r0, pc, r0, lsl #10
  54:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  58:	24060000 	strcs	r0, [r6], #-0
  5c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	01010700 	tsteq	r1, r0, lsl #14
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21080000 	mrscs	r0, (UNDEF: 8)
  70:	2f134900 	svccs	0x00134900
  74:	0900000b 	stmdbeq	r0, {r0, r1, r3}
  78:	08030005 	stmdaeq	r3, {r0, r2}
  7c:	0b3b0b3a 	bleq	ec2d6c <startup-0x1f13d294>
  80:	13490b39 	movtne	r0, #39737	; 0x9b39
  84:	00001802 	andeq	r1, r0, r2, lsl #16
  88:	0300050a 	movweq	r0, #1290	; 0x50a
  8c:	3b0b3a0e 	blcc	2ce8cc <startup-0x1fd31734>
  90:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  94:	00180213 	andseq	r0, r8, r3, lsl r2
  98:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
  9c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  a0:	0b3b0b3a 	bleq	ec2d90 <startup-0x1f13d270>
  a4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  a8:	01111349 	tsteq	r1, r9, asr #6
  ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  b0:	01194296 			; <UNDEFINED> instruction: 0x01194296
  b4:	0c000013 	stceq	0, cr0, [r0], {19}
  b8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  bc:	0b3a0e03 	bleq	e838d0 <startup-0x1f17c730>
  c0:	0b390b3b 	bleq	e42db4 <startup-0x1f1bd24c>
  c4:	01111349 	tsteq	r1, r9, asr #6
  c8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  cc:	01194296 			; <UNDEFINED> instruction: 0x01194296
  d0:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
  d4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  d8:	0b3a0e03 	bleq	e838ec <startup-0x1f17c714>
  dc:	0b390b3b 	bleq	e42dd0 <startup-0x1f1bd230>
  e0:	01111927 	tsteq	r1, r7, lsr #18
  e4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  e8:	01194297 			; <UNDEFINED> instruction: 0x01194297
  ec:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  f0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  f4:	0b3a0e03 	bleq	e83908 <startup-0x1f17c6f8>
  f8:	0b390b3b 	bleq	e42dec <startup-0x1f1bd214>
  fc:	01111927 	tsteq	r1, r7, lsr #18
 100:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 104:	00194297 	mulseq	r9, r7, r2
 108:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
 10c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 110:	0b3b0b3a 	bleq	ec2e00 <startup-0x1f13d200>
 114:	01110b39 	tsteq	r1, r9, lsr fp
 118:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 11c:	01194296 			; <UNDEFINED> instruction: 0x01194296
 120:	10000013 	andne	r0, r0, r3, lsl r0
 124:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 128:	0b3a0e03 	bleq	e8393c <startup-0x1f17c6c4>
 12c:	0b390b3b 	bleq	e42e20 <startup-0x1f1bd1e0>
 130:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
 134:	00001301 	andeq	r1, r0, r1, lsl #6
 138:	00001811 	andeq	r1, r0, r1, lsl r8
 13c:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
 140:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 144:	0b3b0b3a 	bleq	ec2e34 <startup-0x1f13d1cc>
 148:	13490b39 	movtne	r0, #39737	; 0x9b39
 14c:	0000193c 	andeq	r1, r0, ip, lsr r9
 150:	0b002413 	bleq	91a4 <startup-0x1fff6e5c>
 154:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 158:	14000008 	strne	r0, [r0], #-8
 15c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 160:	0b3a0e03 	bleq	e83974 <startup-0x1f17c68c>
 164:	0b390b3b 	bleq	e42e58 <startup-0x1f1bd1a8>
 168:	06120111 			; <UNDEFINED> instruction: 0x06120111
 16c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 170:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000404 	andeq	r0, r0, r4, lsl #8
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000414 	andcs	r0, r0, r4, lsl r4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000023f 	andeq	r0, r0, pc, lsr r2
   4:	005a0003 	subseq	r0, sl, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	554b2f3a 	strbpl	r2, [fp, #-3898]	; 0xfffff0c6
  20:	52455352 	subpl	r5, r5, #1207959553	; 0x48000001
  24:	73614d2f 	cmnvc	r1, #3008	; 0xbc0
  28:	4f6e696b 	svcmi	0x006e696b
  2c:	6e656972 			; <UNDEFINED> instruction: 0x6e656972
  30:	61726574 	cmnvs	r2, r4, ror r5
  34:	6f725064 	svcvs	0x00725064
  38:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  3c:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
  40:	4c2f676e 	stcmi	7, cr6, [pc], #-440	; fffffe90 <__aeabi_idiv0+0xdffff968>
  44:	2f326261 	svccs	0x00326261
  48:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  4c:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
  50:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  54:	74730000 	ldrbtvc	r0, [r3], #-0
  58:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  5c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  60:	00000001 	andeq	r0, r0, r1
  64:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  68:	00000002 	andeq	r0, r0, r2
  6c:	011e0320 	tsteq	lr, r0, lsr #6
  70:	2f212113 	svccs	0x00212113
  74:	00030221 	andeq	r0, r3, r1, lsr #4
  78:	01050101 	tsteq	r5, r1, lsl #2
  7c:	10020500 	andne	r0, r2, r0, lsl #10
  80:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  84:	02050126 	andeq	r0, r5, #-2147483639	; 0x80000009
  88:	2010052f 	andscs	r0, r0, pc, lsr #10
  8c:	772f0105 	strvc	r0, [pc, -r5, lsl #2]!
  90:	3d2f0505 	cfstr32cc	mvfx0, [pc, #-20]!	; 84 <startup-0x1fffff7c>
  94:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
  98:	3f3d0105 	svccc	0x003d0105
  9c:	05300205 	ldreq	r0, [r0, #-517]!	; 0xfffffdfb
  a0:	0205200c 	andeq	r2, r5, #12
  a4:	200c052f 	andcs	r0, ip, pc, lsr #10
  a8:	052f0205 	streq	r0, [pc, #-517]!	; fffffeab <__aeabi_idiv0+0xdffff983>
  ac:	0205200b 	andeq	r2, r5, #11
  b0:	200c052f 	andcs	r0, ip, pc, lsr #10
  b4:	052f0705 	streq	r0, [pc, #-1797]!	; fffff9b7 <__aeabi_idiv0+0xdffff48f>
  b8:	0402000a 	streq	r0, [r2], #-10
  bc:	14052001 	strne	r2, [r5], #-1
  c0:	01040200 	mrseq	r0, R12_usr
  c4:	0007052e 	andeq	r0, r7, lr, lsr #10
  c8:	3c010402 	cfstrscc	mvf0, [r1], {2}
  cc:	05210205 	streq	r0, [r1, #-517]!	; 0xfffffdfb
  d0:	0105200c 	tsteq	r5, ip
  d4:	0605932f 	streq	r9, [r5], -pc, lsr #6
  d8:	7505054c 	strvc	r0, [r5, #-1356]	; 0xfffffab4
  dc:	053f0705 	ldreq	r0, [pc, #-1797]!	; fffff9df <__aeabi_idiv0+0xdffff4b7>
  e0:	2f2f2203 	svccs	0x002f2203
  e4:	2f05052f 	svccs	0x0005052f
  e8:	7a030705 	bvc	c1d04 <startup-0x1ff3e2fc>
  ec:	4401053c 	strmi	r0, [r1], #-1340	; 0xfffffac4
  f0:	4b020577 	blmi	816d4 <startup-0x1ff7e92c>
  f4:	059f0105 	ldreq	r0, [pc, #261]	; 201 <startup-0x1ffffdff>
  f8:	09054c2a 	stmdbeq	r5, {r1, r3, r5, sl, fp, lr}
  fc:	20070568 	andcs	r0, r7, r8, ror #10
 100:	054b1505 	strbeq	r1, [fp, #-1285]	; 0xfffffafb
 104:	15056605 	strne	r6, [r5, #-1541]	; 0xfffff9fb
 108:	4b010520 	blmi	41590 <startup-0x1ffbea70>
 10c:	05682c05 	strbeq	r2, [r8, #-3077]!	; 0xfffff3fb
 110:	04056806 	streq	r6, [r5], #-2054	; 0xfffff7fa
 114:	4b080520 	blmi	20159c <startup-0x1fdfea64>
 118:	059e0405 	ldreq	r0, [lr, #1029]	; 0x405
 11c:	12052f02 	andne	r2, r5, #2, 30
 120:	67010520 	strvs	r0, [r1, -r0, lsr #10]
 124:	05682505 	strbeq	r2, [r8, #-1285]!	; 0xfffffafb
 128:	053d6702 	ldreq	r6, [sp, #-1794]!	; 0xfffff8fe
 12c:	02052013 	andeq	r2, r5, #19
 130:	01053d3d 	tsteq	r5, sp, lsr sp
 134:	0205692f 	andeq	r6, r5, #770048	; 0xbc000
 138:	053e3d67 	ldreq	r3, [lr, #-3431]!	; 0xfffff299
 13c:	054d5901 	strbeq	r5, [sp, #-2305]	; 0xfffff6ff
 140:	3e3d6702 	cdpcc	7, 3, cr6, cr13, cr2, {0}
 144:	05590105 	ldrbeq	r0, [r9, #-261]	; 0xfffffefb
 148:	02054c2b 	andeq	r4, r5, #11008	; 0x2b00
 14c:	052f3d3e 	streq	r3, [pc, #-3390]!	; fffff416 <__aeabi_idiv0+0xdfffeeee>
 150:	04052f06 	streq	r2, [r5], #-3846	; 0xfffff0fa
 154:	3d020520 	cfstr32cc	mvfx0, [r2, #-128]	; 0xffffff80
 158:	053d0905 	ldreq	r0, [sp, #-2309]!	; 0xfffff6fb
 15c:	23052f01 	movwcs	r2, #24321	; 0x5f01
 160:	3e020576 	cfrshl64cc	mvdx2, mvdx6, r0
 164:	05201005 	streq	r1, [r0, #-5]!
 168:	053d2f02 	ldreq	r2, [sp, #-3842]!	; 0xfffff0fe
 16c:	02053d06 	andeq	r3, r5, #384	; 0x180
 170:	20100559 	andscs	r0, r0, r9, asr r5
 174:	052f0905 	streq	r0, [pc, #-2309]!	; fffff877 <__aeabi_idiv0+0xdffff34f>
 178:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
 17c:	10053e02 	andne	r3, r5, r2, lsl #28
 180:	2f020520 	svccs	0x00020520
 184:	3d06053d 	cfstr32cc	mvfx0, [r6, #-244]	; 0xffffff0c
 188:	05590205 	ldrbeq	r0, [r9, #-517]	; 0xfffffdfb
 18c:	09052010 	stmdbeq	r5, {r4, sp}
 190:	2f01052f 	svccs	0x0001052f
 194:	670705a1 	strvs	r0, [r7, -r1, lsr #11]
 198:	02000905 	andeq	r0, r0, #81920	; 0x14000
 19c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 1a0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
 1a4:	07053c01 	streq	r3, [r5, -r1, lsl #24]
 1a8:	01040200 	mrseq	r0, R12_usr
 1ac:	2f02053c 	svccs	0x0002053c
 1b0:	5a04053d 	bpl	1016ac <startup-0x1fefe954>
 1b4:	02001f05 	andeq	r1, r0, #5, 30
 1b8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
 1bc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 1c0:	2c054a02 			; <UNDEFINED> instruction: 0x2c054a02
 1c4:	03040200 	movweq	r0, #16896	; 0x4200
 1c8:	4c070520 	cfstr32mi	mvfx0, [r7], {32}
 1cc:	3f3d0105 	svccc	0x003d0105
 1d0:	05670705 	strbeq	r0, [r7, #-1797]!	; 0xfffff8fb
 1d4:	04020009 	streq	r0, [r2], #-9
 1d8:	1d052001 	stcne	0, cr2, [r5, #-4]
 1dc:	01040200 	mrseq	r0, R12_usr
 1e0:	0007053c 	andeq	r0, r7, ip, lsr r5
 1e4:	3c010402 	cfstrscc	mvf0, [r1], {2}
 1e8:	3d2f0205 	sfmcc	f0, 4, [pc, #-20]!	; 1dc <startup-0x1ffffe24>
 1ec:	3d010559 	cfstr32cc	mvfx0, [r1, #-356]	; 0xfffffe9c
 1f0:	911d054d 	tstls	sp, sp, asr #10
 1f4:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
 1f8:	17052104 	strne	r2, [r5, -r4, lsl #2]
 1fc:	01040200 	mrseq	r0, R12_usr
 200:	3d02054a 	cfstr32cc	mvfx0, [r2, #-296]	; 0xfffffed8
 204:	4d910105 	ldfmis	f0, [r1, #20]
 208:	753e0705 	ldrvc	r0, [lr, #-1797]!	; 0xfffff8fb
 20c:	2f830205 	svccs	0x00830205
 210:	4b04052f 	blmi	1016d4 <startup-0x1fefe92c>
 214:	052f0705 	streq	r0, [pc, #-1797]!	; fffffb17 <__aeabi_idiv0+0xdffff5ef>
 218:	03052116 	movweq	r2, #20758	; 0x5116
 21c:	4908053c 	stmdbmi	r8, {r2, r3, r4, r5, r8, sl}
 220:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
 224:	04053002 	streq	r3, [r5], #-2
 228:	2f07054b 	svccs	0x0007054b
 22c:	05211605 	streq	r1, [r1, #-1541]!	; 0xfffff9fb
 230:	08053c03 	stmdaeq	r5, {r0, r1, sl, fp, ip, sp}
 234:	2e070549 	cfsh32cs	mvfx0, mvfx7, #41
 238:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
 23c:	08022101 	stmdaeq	r2, {r0, r8, sp}
 240:	Address 0x00000240 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	616c6564 	cmnvs	ip, r4, ror #10
   4:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
   8:	00696c6c 	rsbeq	r6, r9, ip, ror #24
   c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  10:	6f675f69 	svcvs	0x00675f69
  14:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  18:	736e7500 	cmnvc	lr, #0, 10
  1c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  20:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  24:	73610074 	cmnvc	r1, #116	; 0x74
  28:	5f696963 	svcpl	0x00696963
  2c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
  30:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
  34:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
  38:	61007261 	tstvs	r0, r1, ror #4
  3c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
  40:	6165725f 	cmnvs	r5, pc, asr r2
  44:	6f635f64 	svcvs	0x00635f64
  48:	6f72746e 	svcvs	0x0072746e
  4c:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
  50:	63736100 	cmnvs	r3, #0, 2
  54:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
  58:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
  5c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
  60:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; fffffe98 <__aeabi_idiv0+0xdffff970>
  64:	0072656c 	rsbseq	r6, r2, ip, ror #10
  68:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
  6c:	7070615f 	rsbsvc	r6, r0, pc, asr r1
  70:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  74:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  78:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  7c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  80:	31393130 	teqcc	r9, r0, lsr r1
  84:	20353230 	eorscs	r3, r5, r0, lsr r2
  88:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  8c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  90:	415b2029 	cmpmi	fp, r9, lsr #32
  94:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  98:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  9c:	6172622d 	cmnvs	r2, sp, lsr #4
  a0:	2068636e 	rsbcs	r6, r8, lr, ror #6
  a4:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  a8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  ac:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  b0:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
  b4:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  b8:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  bc:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  c0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  c4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  c8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  cc:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  d0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  d4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  d8:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  dc:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  e0:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  e4:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  e8:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  ec:	63736100 	cmnvs	r3, #0, 2
  f0:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
  f4:	5f646165 	svcpl	0x00646165
  f8:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
  fc:	61007375 	tstvs	r0, r5, ror r3
 100:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 104:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 108:	645f6574 	ldrbvs	r6, [pc], #-1396	; 110 <startup-0x1ffffef0>
 10c:	00617461 	rsbeq	r7, r1, r1, ror #8
 110:	616c6564 	cmnvs	ip, r4, ror #10
 114:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 118:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 11c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 120:	00737365 	rsbseq	r7, r3, r5, ror #6
 124:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 128:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
 12c:	645f6461 	ldrbvs	r6, [pc], #-1121	; 134 <startup-0x1ffffecc>
 130:	00617461 	rsbeq	r7, r1, r1, ror #8
 134:	4b5c3a44 	blmi	170ea4c <startup-0x1e8f15b4>
 138:	45535255 	ldrbmi	r5, [r3, #-597]	; 0xfffffdab
 13c:	614d5c52 	cmpvs	sp, r2, asr ip
 140:	6e696b73 	vmovvs.8	d9[7], r6
 144:	6569724f 	strbvs	r7, [r9, #-591]!	; 0xfffffdb1
 148:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 14c:	72506461 	subsvc	r6, r0, #1627389952	; 0x61000000
 150:	6172676f 	cmnvs	r2, pc, ror #14
 154:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
 158:	5c676e69 	stclpl	14, cr6, [r7], #-420	; 0xfffffe5c
 15c:	3262614c 	rsbcc	r6, r2, #76, 2
 160:	6373615c 	cmnvs	r3, #92, 2
 164:	69646969 	stmdbvs	r4!, {r0, r3, r5, r6, r8, fp, sp, lr}^
 168:	616c7073 	smcvs	50947	; 0xc703
 16c:	65640079 	strbvs	r0, [r4, #-121]!	; 0xffffff87
 170:	5f79616c 	svcpl	0x0079616c
 174:	7263696d 	rsbvc	r6, r3, #1785856	; 0x1b4000
 178:	6e75006f 	cdpvs	0, 7, cr0, cr5, cr15, {3}
 17c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 180:	63206465 			; <UNDEFINED> instruction: 0x63206465
 184:	00726168 	rsbseq	r6, r2, r8, ror #2
 188:	6e69616d 	powvsez	f6, f1, #5.0
 18c:	63736100 	cmnvs	r3, #0, 2
 190:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 194:	616d6d6f 	cmnvs	sp, pc, ror #26
 198:	7300646e 	movwvc	r6, #1134	; 0x46e
 19c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 1a0:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
 1a4:	31747365 	cmncc	r4, r5, ror #6
 1a8:	73657400 	cmnvc	r5, #0, 8
 1ac:	44003274 	strmi	r3, [r0], #-628	; 0xfffffd8c
 1b0:	554b2f3a 	strbpl	r2, [fp, #-3898]	; 0xfffff0c6
 1b4:	52455352 	subpl	r5, r5, #1207959553	; 0x48000001
 1b8:	73614d2f 	cmnvc	r1, #3008	; 0xbc0
 1bc:	4f6e696b 	svcmi	0x006e696b
 1c0:	6e656972 			; <UNDEFINED> instruction: 0x6e656972
 1c4:	61726574 	cmnvs	r2, r4, ror r5
 1c8:	6f725064 	svcvs	0x00725064
 1cc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 1d0:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 1d4:	4c2f676e 	stcmi	7, cr6, [pc], #-440	; 24 <startup-0x1fffffdc>
 1d8:	2f326261 	svccs	0x00326261
 1dc:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 1e0:	73696469 	cmnvc	r9, #1761607680	; 0x69000000
 1e4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 1e8:	6174732f 	cmnvs	r4, pc, lsr #6
 1ec:	70757472 	rsbsvc	r7, r5, r2, ror r4
 1f0:	6100632e 	tstvs	r0, lr, lsr #6
 1f4:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 1f8:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 1fc:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 200:	6100646d 	tstvs	r0, sp, ror #8
 204:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 208:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 20c:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 210:	00726168 	rsbseq	r6, r2, r8, ror #2
 214:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 218:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
 21c:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 220:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
 224:	61007465 	tstvs	r0, r5, ror #8
 228:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 22c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 230:	Address 0x00000230 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000028 	andcs	r0, r0, r8, lsr #32
  48:	0000002e 	andeq	r0, r0, lr, lsr #32
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000056 	andcs	r0, r0, r6, asr r0
  64:	00000042 	andeq	r0, r0, r2, asr #32
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
  74:	0000001c 	andeq	r0, r0, ip, lsl r0
  78:	00000000 	andeq	r0, r0, r0
  7c:	20000098 	mulcs	r0, r8, r0
  80:	00000048 	andeq	r0, r0, r8, asr #32
  84:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  88:	41018e02 	tstmi	r1, r2, lsl #28
  8c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  90:	00000007 	andeq	r0, r0, r7
  94:	0000001c 	andeq	r0, r0, ip, lsl r0
  98:	00000000 	andeq	r0, r0, r0
  9c:	200000e0 	andcs	r0, r0, r0, ror #1
  a0:	00000024 	andeq	r0, r0, r4, lsr #32
  a4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  a8:	41018e02 	tstmi	r1, r2, lsl #28
  ac:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b0:	00000007 	andeq	r0, r0, r7
  b4:	0000001c 	andeq	r0, r0, ip, lsl r0
  b8:	00000000 	andeq	r0, r0, r0
  bc:	20000104 	andcs	r0, r0, r4, lsl #2
  c0:	00000038 	andeq	r0, r0, r8, lsr r0
  c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  c8:	41018e02 	tstmi	r1, r2, lsl #28
  cc:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  d0:	00000007 	andeq	r0, r0, r7
  d4:	0000001c 	andeq	r0, r0, ip, lsl r0
  d8:	00000000 	andeq	r0, r0, r0
  dc:	2000013c 	andcs	r0, r0, ip, lsr r1
  e0:	00000048 	andeq	r0, r0, r8, asr #32
  e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  e8:	41018e02 	tstmi	r1, r2, lsl #28
  ec:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  f0:	00000007 	andeq	r0, r0, r7
  f4:	0000001c 	andeq	r0, r0, ip, lsl r0
  f8:	00000000 	andeq	r0, r0, r0
  fc:	20000184 	andcs	r0, r0, r4, lsl #3
 100:	00000030 	andeq	r0, r0, r0, lsr r0
 104:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 108:	41018e02 	tstmi	r1, r2, lsl #28
 10c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 110:	00000007 	andeq	r0, r0, r7
 114:	0000001c 	andeq	r0, r0, ip, lsl r0
 118:	00000000 	andeq	r0, r0, r0
 11c:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
 120:	0000002a 	andeq	r0, r0, sl, lsr #32
 124:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 128:	41018e02 	tstmi	r1, r2, lsl #28
 12c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 130:	00000007 	andeq	r0, r0, r7
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000000 	andeq	r0, r0, r0
 13c:	200001de 	ldrdcs	r0, [r0], -lr
 140:	0000002a 	andeq	r0, r0, sl, lsr #32
 144:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 148:	41018e02 	tstmi	r1, r2, lsl #28
 14c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 150:	00000007 	andeq	r0, r0, r7
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	20000208 	andcs	r0, r0, r8, lsl #4
 160:	00000034 	andeq	r0, r0, r4, lsr r0
 164:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 168:	41018e02 	tstmi	r1, r2, lsl #28
 16c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 170:	00000007 	andeq	r0, r0, r7
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000000 	andeq	r0, r0, r0
 17c:	2000023c 	andcs	r0, r0, ip, lsr r2
 180:	00000040 	andeq	r0, r0, r0, asr #32
 184:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 188:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 18c:	180e4101 	stmdane	lr, {r0, r8, lr}
 190:	00070d41 	andeq	r0, r7, r1, asr #26
 194:	0000001c 	andeq	r0, r0, ip, lsl r0
 198:	00000000 	andeq	r0, r0, r0
 19c:	2000027c 	andcs	r0, r0, ip, ror r2
 1a0:	00000040 	andeq	r0, r0, r0, asr #32
 1a4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 1a8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1ac:	180e4101 	stmdane	lr, {r0, r8, lr}
 1b0:	00070d41 	andeq	r0, r7, r1, asr #26
 1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	200002bc 			; <UNDEFINED> instruction: 0x200002bc
 1c0:	00000054 	andeq	r0, r0, r4, asr r0
 1c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1c8:	41018e02 	tstmi	r1, r2, lsl #28
 1cc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1d0:	00000007 	andeq	r0, r0, r7
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	20000310 	andcs	r0, r0, r0, lsl r3
 1e0:	0000003c 	andeq	r0, r0, ip, lsr r0
 1e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1e8:	41018e02 	tstmi	r1, r2, lsl #28
 1ec:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1f0:	00000007 	andeq	r0, r0, r7
 1f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	2000034c 	andcs	r0, r0, ip, asr #6
 200:	00000042 	andeq	r0, r0, r2, asr #32
 204:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 208:	41018e02 	tstmi	r1, r2, lsl #28
 20c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 210:	00000007 	andeq	r0, r0, r7
 214:	00000020 	andeq	r0, r0, r0, lsr #32
 218:	00000000 	andeq	r0, r0, r0
 21c:	2000038e 	andcs	r0, r0, lr, lsl #7
 220:	00000086 	andeq	r0, r0, r6, lsl #1
 224:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 228:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 22c:	41018e02 	tstmi	r1, r2, lsl #28
 230:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 234:	00000007 	andeq	r0, r0, r7
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c010001 	stcvc	0, cr0, [r1], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000000c 	andeq	r0, r0, ip
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	20000415 	andcs	r0, r0, r5, lsl r4
 254:	0000010a 	andeq	r0, r0, sl, lsl #2
